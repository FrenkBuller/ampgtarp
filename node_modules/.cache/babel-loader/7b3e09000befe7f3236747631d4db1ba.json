{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\inventory\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\inventory\\index.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport _typeof from \"D:\\\\west-master\\\\packages\\\\server\\\\HTML\\\\vue\\\\test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport slotItem from \"./slot.vue\";\nimport item from \"./item.vue\";\nimport itemWeapon from \"./itemWeapon.vue\";\nimport titleInventory from \"./title.vue\";\nimport infoItems from \"../../../inventory/itemsinfo.js\";\nimport slotPlayer from \"./slotPlayer.vue\";\nexport default {\n  data: function data() {\n    return {\n      show: false,\n      hunger: 0,\n      water: 0,\n      items: [],\n      dragSLotInfo: {\n        item: {},\n        inventorydrag: \"\",\n        dragslot: -1\n      },\n      infoItems: infoItems,\n      interactionInventory: 0,\n      weaponSlots: ['weapon1', 'weapon2', 'weapon3', 'weapon4'],\n      interactive: {\n        show: false,\n        slot: 0,\n        inventory: 0,\n        use: false,\n        weaponsAmmo: [],\n        name: ''\n      },\n      playerItems: {\n        // glasses: infoItems[9],\n        // hat: infoItems[8],\n        // top: infoItems[2],\n        // leg: infoItems[3],\n        // foot: infoItems[4],\n        weapon1: infoItems[0],\n        weapon2: infoItems[0],\n        weapon3: infoItems[0],\n        weapon4: infoItems[0] // ammo1: infoItems[21],\n        // ammo2: infoItems[21],\n\n      },\n      interactionsInventoryIndex: 0,\n      interactionsInventory: [],\n      rightInventories: [{\n        show: false,\n        width: infoItems[2].inventoryWidth,\n        height: infoItems[2].inventoryHeight,\n        name: 'Верхняя одежда',\n        nameInventory: 'top',\n        items: []\n      }, {\n        show: false,\n        \"width\": infoItems[3].inventoryWidth,\n        \"height\": infoItems[3].inventoryHeight,\n        name: 'Штаны',\n        nameInventory: 'leg',\n        items: []\n      }, {\n        show: false,\n        width: infoItems[63].inventoryWidth,\n        nameInventory: 'bag',\n        height: infoItems[63].inventoryHeight,\n        name: 'Сумка',\n        items: []\n      }]\n    };\n  },\n  methods: {\n    clickRightItem: function clickRightItem(event, slot) {\n      var inventory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"player\";\n      var item = inventory == \"player\" ? this.playerItems[slot] : this.rightInventories[inventory].items[slot];\n      if (!item || !item.id) return;\n      this.interactive.show = true;\n      this.interactive.slot = slot;\n      this.interactive.x = event.pageX;\n      this.interactive.y = event.pageY;\n      this.interactive.use = inventory != \"player\" || infoItems[item.id].isUse; // Если предмет патроны\n\n      if (inventory != \"player\") inventory = this.rightInventories[inventory].nameInventory;\n      this.interactive.inventory = inventory;\n      this.interactive.weaponsAmmo = [];\n      this.interactive.name = this.getNameItem(item);\n\n      if (item.id == 19) {\n        var weaponSlots = this.weaponSlots;\n\n        for (var i = 0; i < weaponSlots.length; i++) {\n          var weaponSlot = weaponSlots[i];\n          var _itemWeapon = this.playerItems[weaponSlot];\n\n          if (_itemWeapon && _itemWeapon.id) {\n            var itemInfo = infoItems[_itemWeapon.id];\n\n            if (itemInfo.type == \"weapon\" && itemInfo.id != 7) {\n              this.interactive.weaponsAmmo.push({\n                name: itemInfo.name,\n                weaponSlot: weaponSlot\n              });\n            }\n          }\n        }\n      }\n    },\n    getNameItem: function getNameItem(item) {\n      if (item.id == 1) return \"\".concat(item.name, \" \").concat(item.name_cart, \" \").concat(item.surname);else return item.name;\n    },\n    hide: function hide() {\n      this.show = false;\n      mp.trigger(\"guitoggle\", this.show);\n      this.offDraggableItem();\n    },\n    clickItemRight: function clickItemRight(inventory, index) {\n      var item = inventory.items[index];\n      this.dragSLotInfo.inventorydrag = inventory.nameInventory;\n      this.dragSLotInfo.dragslot = index;\n      this.dragItem(item);\n    },\n    dragItem: function dragItem(item) {\n      this.interactive.show = false;\n      $(\".itemdrag\").css(\"background-image\", \"url(\".concat(this.$root.cdn, \"img/items/\").concat(item.image, \")\"));\n      this.dragSLotInfo.item = item;\n      inventory.interactive.show = false;\n    },\n    rchargeInteractive: function rchargeInteractive(weaponSlot) {\n      this.interactive.show = false;\n      mp.trigger('CallRemote', \"INVENTORY::RCHARGE_ITEM\", this.interactive.slot, this.interactive.inventory, weaponSlot);\n    },\n    mouseupRight: function mouseupRight(inventory, index) {\n      if (!this.dragSLotInfo.item.id) return;\n      if (!inventory.show && !inventory.interactive) return;\n      var free = this.isFreeItem(inventory, this.dragSLotInfo.item, index);\n\n      if (free && this.dragSLotInfo.dragslot !== -1) {\n        mp.trigger(\"CallRemote\", \"INVENTORY::DRAG_SLOT\", this.dragSLotInfo.inventorydrag, this.dragSLotInfo.dragslot, inventory.nameInventory, index);\n      }\n\n      this.offDraggableItem();\n    },\n    mouseoverRight: function mouseoverRight(inventory, index) {\n      if (!this.dragSLotInfo.item || !this.dragSLotInfo.item.id) return;\n      var free = this.isFreeItem(inventory, this.dragSLotInfo.item, index);\n\n      if (free) {}\n    },\n    isFreeItem: function isFreeItem(inventory, item, index) {\n      var hasSize = this.isSizeItem(inventory, item, index);\n\n      if (hasSize) {\n        var infoitem = infoItems[item.id];\n        var inventoryWidth = inventory.width;\n        var x = index % inventoryWidth;\n        var y = (index - x) / inventoryWidth;\n\n        for (var xFor = x; xFor < infoitem.width + x; xFor++) {\n          for (var yFor = y; yFor < infoitem.height + y; yFor++) {\n            if (!(x == xFor && y == yFor)) {\n              var _index = yFor * inventoryWidth + xFor;\n\n              if (inventory.items[_index] && inventory.items[_index].id && this.dragSLotInfo.dragslot != _index || inventory.items[_index] && typeof inventory.items[_index].linkId != \"undefined\" && inventory.items[_index].linkId != this.dragSLotInfo.dragslot) return false;\n            }\n          }\n        }\n      }\n\n      return hasSize;\n    },\n    mouseupPlayer: function mouseupPlayer(index) {\n      var free = !this.playerItems[index] || !this.playerItems[index].id || this.playerItems[index].id == this.dragSLotInfo.item.id;\n\n      if (free || index.indexOf('weapon') != -1) {\n        mp.trigger(\"CallRemote\", \"INVENTORY::DRAG_SLOT\", this.dragSLotInfo.inventorydrag, this.dragSLotInfo.dragslot, \"player\", index);\n      }\n\n      this.offDraggableItem();\n    },\n    mouseoverPlayer: function mouseoverPlayer(index) {\n      if (!this.dragSLotInfo || !this.dragSLotInfo.id) return;\n      inventory = this.rightInventories[inventory];\n      var free = this.playerItems;\n\n      if (free) {}\n    },\n    clickItemPlayer: function clickItemPlayer(index) {\n      var item = this.playerItems[index];\n      if (_typeof(item) != 'object' || !item.id) return;\n      this.dragItem(item);\n      this.dragSLotInfo.item = item;\n      this.dragSLotInfo.inventorydrag = \"player\";\n      this.dragSLotInfo.dragslot = index;\n    },\n    getCoordsIndex: function getCoordsIndex(inventory, index) {\n      var x = index % inventory.width;\n      var y = (index - x) / inventory.width;\n      return {\n        x: x,\n        y: y\n      };\n    },\n    isSizeItem: function isSizeItem(inventory, item, index) {\n      var _this$getCoordsIndex = this.getCoordsIndex(inventory, index),\n          x = _this$getCoordsIndex.x,\n          y = _this$getCoordsIndex.y;\n\n      return !(x + item.width > inventory.width || y + item.height > inventory.height);\n    },\n    addInteractionInventory: function addInteractionInventory(name, title) {\n      this.interactionsInventory.push({\n        nameInventory: name,\n        title: title,\n        items: [],\n        width: 13,\n        height: 2,\n        interactive: true\n      });\n    },\n    removeInteractionInventory: function removeInteractionInventory(name) {\n      for (var i = 0; i < this.interactionsInventory.length; i++) {\n        if (this.interactionsInventory[i].nameInventory == name) this.interactionsInventory.splice(i, 1);\n      }\n\n      if (!this.interactionsInventory.length) this.interactionInventory = 0;\n    },\n    removeInteractionItem: function removeInteractionItem(nameInventory, id) {\n      var inventory = this.interactionsInventory.find(function (inventory) {\n        if (inventory.nameInventory == nameInventory) return true;\n      });\n      var inventoryWidth = inventory.width;\n      var infoitem = infoItems[inventory.items[id].id];\n      var x = id % inventoryWidth;\n      var y = (id - x) / inventoryWidth;\n\n      for (var xFor = x; xFor < infoitem.width + x; xFor++) {\n        for (var yFor = y; yFor < infoitem.height + y; yFor++) {\n          if (!(x == xFor && y == yFor)) {\n            var index = yFor * inventoryWidth + xFor;\n            delete inventory.items[index].linkId;\n          }\n        }\n      }\n\n      this.$set(inventory.items, id, JSON.parse(JSON.stringify(infoItems[0])));\n    },\n    setInteractionItem: function setInteractionItem(nameInventory, id, item) {\n      var inventory = this.interactionsInventory.find(function (inventory) {\n        if (inventory.nameInventory == nameInventory) return true;\n      });\n      this.$set(inventory.items, id, item);\n      var infoitem = item;\n      var width = inventory.width;\n      var x = id % width;\n      var y = (id - x) / width;\n\n      for (var xFor = x; xFor < infoitem.width + x; xFor++) {\n        for (var yFor = y; yFor < infoitem.height + y; yFor++) {\n          if (!(x == xFor && y == yFor)) {\n            var index = yFor * width + xFor;\n            inventory.items[index].linkId = id;\n            this.$set(inventory.items, index, inventory.items[index]);\n          }\n        }\n      }\n    },\n    setIteractiveItems: function setIteractiveItems(nameInventory, items) {\n      var _this = this;\n\n      var inventory = this.interactionsInventory.find(function (inventory) {\n        if (inventory.nameInventory == nameInventory) return true;\n      });\n      items.forEach(function (item, i) {\n        _this.$set(inventory.items, i, item);\n      });\n    },\n    dropInteractive: function dropInteractive() {\n      this.interactive.show = false;\n      mp.trigger('INVENTORY::DROP_ITEM', this.interactive.slot, this.interactive.inventory);\n    },\n    useInteractive: function useInteractive() {\n      this.interactive.show = false;\n      mp.trigger('CallRemote', 'INVENTORY::USE_ITEM', this.interactive.slot, this.interactive.inventory);\n    },\n    setRightItems: function setRightItems(id, items) {\n      var _this2 = this;\n\n      items.forEach(function (item, i) {\n        _this2.$set(_this2.rightInventories[id].items, i, item);\n      });\n    },\n    hideRightItems: function hideRightItems(id) {\n      this.rightInventories[id].show = false;\n\n      for (var i = 0; i < this.rightInventories[id].width * this.rightInventories[id].height; i++) {\n        this.$set(this.rightInventories[id].items, i, JSON.parse(JSON.stringify(infoItems[0])));\n      }\n    },\n    isDragCurentItem: function isDragCurentItem(item, nameInventory, index) {\n      var hasItemDrag = this.dragSLotInfo.inventorydrag != \"player\" && !!this.dragSLotInfo.item.id;\n      return !!item && hasItemDrag && nameInventory == this.dragSLotInfo.inventorydrag && (this.dragSLotInfo.dragslot == index || item.linkId == this.dragSLotInfo.dragslot);\n    },\n    hasShowSlot: function hasShowSlot(item, nameInventory, index) {\n      if (this.isDragCurentItem(item, nameInventory, index)) {\n        return false;\n      } else {\n        return _typeof(item) != 'object' || item.id || typeof item.linkId == 'undefined';\n      }\n    },\n    getCssItemInventory: function getCssItemInventory(item, index, inventory) {\n      var _this$getCoordsIndex2 = this.getCoordsIndex(inventory, index),\n          x = _this$getCoordsIndex2.x,\n          y = _this$getCoordsIndex2.y;\n\n      var nameInventory = inventory.nameInventory;\n      return \"\".concat(!this.isDragCurentItem(item, nameInventory, index) ? \"grid-column-end: \".concat(!!item ? item.width : '', \" span;  grid-row-end: \").concat(!!item ? item.height : '', \" span ;\") : '', \" \\n            \").concat(this.isDragCurentItem(item, nameInventory, index) || _typeof(item) != 'object' || item.id || typeof item.linkId == 'undefined' ? 'display: flex;' : 'display:none', \" ;\\n            gridColumnStart: \").concat(x + 1, \";\\n            gridRowStart: \").concat(y + 1, \";\\n            \");\n    },\n    setRightItem: function setRightItem(inventory, id, item) {\n      this.$set(this.rightInventories[inventory].items, id, item);\n      var infoitem = item;\n      var width = this.rightInventories[inventory].width;\n      var x = id % width;\n      var y = (id - x) / width;\n\n      for (var xFor = x; xFor < infoitem.width + x; xFor++) {\n        for (var yFor = y; yFor < infoitem.height + y; yFor++) {\n          if (!(x == xFor && y == yFor)) {\n            var index = yFor * width + xFor;\n            this.rightInventories[inventory].items[index].linkId = id;\n            this.$set(this.rightInventories[inventory].items, index, this.rightInventories[inventory].items[index]);\n          }\n        }\n      }\n    },\n    updateItemPlayer: function updateItemPlayer(id, item) {\n      this.$set(this.playerItems, id, item);\n    },\n    removeRightItem: function removeRightItem(inventory, id) {\n      var inventoryWidth = this.rightInventories[inventory].width;\n      var infoitem = infoItems[this.rightInventories[inventory].items[id].id];\n      var x = id % inventoryWidth;\n      var y = (id - x) / inventoryWidth;\n\n      for (var xFor = x; xFor < infoitem.width + x; xFor++) {\n        for (var yFor = y; yFor < infoitem.height + y; yFor++) {\n          if (!(x == xFor && y == yFor)) {\n            var index = yFor * inventoryWidth + xFor;\n            delete this.rightInventories[inventory].items[index].linkId;\n          }\n        }\n      }\n\n      this.$set(this.rightInventories[inventory].items, id, JSON.parse(JSON.stringify(infoItems[0])));\n    },\n    getHandAllSlot: function getHandAllSlot(hand) {\n      return _typeof(this.playerItems[hand]) == 'object' && this.playerItems[hand].id != 0 && this.playerItems[hand].allHandSlot;\n    },\n    outClick: function outClick() {\n      this.offDraggableItem();\n    },\n    offDraggableItem: function offDraggableItem() {\n      $(\".itemdrag\").css(\"background-image\", 'none');\n      inventory.dragSLotInfo.inventorydrag = 0;\n      inventory.dragSLotInfo.dragslot = -1;\n      inventory.dragSLotInfo.item = {};\n      inventory.interactive.show = false;\n    }\n  },\n  components: {\n    slotItem: slotItem,\n    titleInventory: titleInventory,\n    item: item,\n    itemWeapon: itemWeapon,\n    slotPlayer: slotPlayer\n  },\n  created: function created() {\n    window.inventory = this;\n    $(document).mousemove(function (e) {\n      if (!window.inventory.show) return;\n      $(\".itemdrag\").css({\n        \"left\": e.pageX - 25,\n        \"top\": e.pageY - 25\n      });\n    });\n    $(\"body\").keyup(function (event) {\n      if (event.which == 27 && inventory.show) {\n        inventory.hide();\n      }\n    });\n  },\n  computed: {\n    nickName: function nickName() {\n      var names = window.nickName.split(' ');\n      return \"\".concat(names[0], \" \").concat(names[1][0], \".\");\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA,OAAA,QAAA;AACA,OAAA,IAAA;AACA,OAAA,UAAA;AACA,OAAA,cAAA;AACA,OAAA,SAAA;AACA,OAAA,UAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,CAFA;AAGA,MAAA,KAAA,EAAA,CAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,aAAA,EAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA;AAAA,OALA;AAMA,MAAA,SAAA,EAAA,SANA;AAOA,MAAA,oBAAA,EAAA,CAPA;AAQA,MAAA,WAAA,EAAA,CACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,CARA;AAcA,MAAA,WAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA,CAAA;AAAA,QAAA,SAAA,EAAA,CAAA;AAAA,QAAA,GAAA,EAAA,KAAA;AAAA,QAAA,WAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAdA;AAeA,MAAA,WAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,OAAA,EAAA,SAAA,CAAA,CAAA,CANA;AAOA,QAAA,OAAA,EAAA,SAAA,CAAA,CAAA,CAPA;AAQA,QAAA,OAAA,EAAA,SAAA,CAAA,CAAA,CARA;AASA,QAAA,OAAA,EAAA,SAAA,CAAA,CAAA,CATA,CAUA;AACA;;AAXA,OAfA;AA4BA,MAAA,0BAAA,EAAA,CA5BA;AA6BA,MAAA,qBAAA,EAAA,EA7BA;AAgCA,MAAA,gBAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,SAAA,CAAA,CAAA,CAAA,CAAA,cAFA;AAGA,QAAA,MAAA,EAAA,SAAA,CAAA,CAAA,CAAA,CAAA,eAHA;AAIA,QAAA,IAAA,EAAA,gBAJA;AAKA,QAAA,aAAA,EAAA,KALA;AAMA,QAAA,KAAA,EAAA;AANA,OADA,EAUA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,iBAAA,SAAA,CAAA,CAAA,CAAA,CAAA,cAFA;AAGA,kBAAA,SAAA,CAAA,CAAA,CAAA,CAAA,eAHA;AAIA,QAAA,IAAA,EAAA,OAJA;AAKA,QAAA,aAAA,EAAA,KALA;AAMA,QAAA,KAAA,EAAA;AANA,OAVA,EAoBA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,cAFA;AAGA,QAAA,aAAA,EAAA,KAHA;AAIA,QAAA,MAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,eAJA;AAKA,QAAA,IAAA,EAAA,OALA;AAMA,QAAA,KAAA,EAAA;AANA,OApBA;AAhCA,KAAA;AAiEA,GAnEA;AAoEA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,KADA,EACA,IADA,EACA;AAAA,UAAA,SAAA,uEAAA,QAAA;AACA,UAAA,IAAA,GAAA,SAAA,IAAA,QAAA,GAAA,KAAA,WAAA,CAAA,IAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,CAAA,IAAA,CAAA;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,CAAA,GAAA,KAAA,CAAA,KAAA;AACA,WAAA,WAAA,CAAA,CAAA,GAAA,KAAA,CAAA,KAAA;AACA,WAAA,WAAA,CAAA,GAAA,GAAA,SAAA,IAAA,QAAA,IAAA,SAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAPA,CAQA;;AACA,UAAA,SAAA,IAAA,QAAA,EAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,aAAA;AACA,WAAA,WAAA,CAAA,SAAA,GAAA,SAAA;AACA,WAAA,WAAA,CAAA,WAAA,GAAA,EAAA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,KAAA,WAAA,CAAA,IAAA,CAAA;;AACA,UAAA,IAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,YAAA,WAAA,GAAA,KAAA,WAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,UAAA,GAAA,WAAA,CAAA,CAAA,CAAA;AACA,cAAA,WAAA,GAAA,KAAA,WAAA,CAAA,UAAA,CAAA;;AACA,cAAA,WAAA,IAAA,WAAA,CAAA,EAAA,EAAA;AACA,gBAAA,QAAA,GAAA,SAAA,CAAA,WAAA,CAAA,EAAA,CAAA;;AACA,gBAAA,QAAA,CAAA,IAAA,IAAA,QAAA,IAAA,QAAA,CAAA,EAAA,IAAA,CAAA,EAAA;AACA,mBAAA,WAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AACA,gBAAA,IAAA,EAAA,QAAA,CAAA,IADA;AAEA,gBAAA,UAAA,EAAA;AAFA,eAAA;AAIA;AACA;AACA;AACA;AACA,KA9BA;AA+BA,IAAA,WA/BA,uBA+BA,IA/BA,EA+BA;AACA,UAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,iBAAA,IAAA,CAAA,IAAA,cAAA,IAAA,CAAA,SAAA,cAAA,IAAA,CAAA,OAAA,EAAA,KACA,OAAA,IAAA,CAAA,IAAA;AACA,KAlCA;AAmCA,IAAA,IAnCA,kBAmCA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,MAAA,EAAA,CAAA,OAAA,CAAA,WAAA,EAAA,KAAA,IAAA;AACA,WAAA,gBAAA;AACA,KAvCA;AAwCA,IAAA,cAxCA,0BAwCA,SAxCA,EAwCA,KAxCA,EAwCA;AACA,UAAA,IAAA,GAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,WAAA,YAAA,CAAA,aAAA,GAAA,SAAA,CAAA,aAAA;AACA,WAAA,YAAA,CAAA,QAAA,GAAA,KAAA;AACA,WAAA,QAAA,CAAA,IAAA;AACA,KA7CA;AA8CA,IAAA,QA9CA,oBA8CA,IA9CA,EA8CA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,KAAA;AACA,MAAA,CAAA,CAAA,WAAA,CAAA,CAAA,GAAA,CAAA,kBAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,uBAAA,IAAA,CAAA,KAAA;AACA,WAAA,YAAA,CAAA,IAAA,GAAA,IAAA;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,IAAA,GAAA,KAAA;AACA,KAnDA;AAoDA,IAAA,kBApDA,8BAoDA,UApDA,EAoDA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,KAAA;AACA,MAAA,EAAA,CAAA,OAAA,CAAA,YAAA,EAAA,yBAAA,EAAA,KAAA,WAAA,CAAA,IAAA,EAAA,KAAA,WAAA,CAAA,SAAA,EAAA,UAAA;AACA,KAvDA;AAwDA,IAAA,YAxDA,wBAwDA,SAxDA,EAwDA,KAxDA,EAwDA;AACA,UAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA,EAAA,EAAA;AACA,UAAA,CAAA,SAAA,CAAA,IAAA,IAAA,CAAA,SAAA,CAAA,WAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,SAAA,EAAA,KAAA,YAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACA,UAAA,IAAA,IAAA,KAAA,YAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,EAAA,CAAA,OAAA,CAAA,YAAA,EAAA,sBAAA,EAAA,KAAA,YAAA,CAAA,aAAA,EAAA,KAAA,YAAA,CAAA,QAAA,EAAA,SAAA,CAAA,aAAA,EAAA,KAAA;AACA;;AACA,WAAA,gBAAA;AACA,KAhEA;AAiEA,IAAA,cAjEA,0BAiEA,SAjEA,EAiEA,KAjEA,EAiEA;AACA,UAAA,CAAA,KAAA,YAAA,CAAA,IAAA,IAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA,EAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,SAAA,EAAA,KAAA,YAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACA,UAAA,IAAA,EAAA,CAEA;AACA,KAvEA;AAwEA,IAAA,UAxEA,sBAwEA,SAxEA,EAwEA,IAxEA,EAwEA,KAxEA,EAwEA;AACA,UAAA,OAAA,GAAA,KAAA,UAAA,CAAA,SAAA,EAAA,IAAA,EAAA,KAAA,CAAA;;AACA,UAAA,OAAA,EAAA;AACA,YAAA,QAAA,GAAA,SAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,YAAA,cAAA,GAAA,SAAA,CAAA,KAAA;AACA,YAAA,CAAA,GAAA,KAAA,GAAA,cAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,IAAA,cAAA;;AACA,aAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,KAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,eAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,gBAAA,EAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,kBAAA,MAAA,GAAA,IAAA,GAAA,cAAA,GAAA,IAAA;;AACA,kBAAA,SAAA,CAAA,KAAA,CAAA,MAAA,KAAA,SAAA,CAAA,KAAA,CAAA,MAAA,EAAA,EAAA,IAAA,KAAA,YAAA,CAAA,QAAA,IAAA,MAAA,IAAA,SAAA,CAAA,KAAA,CAAA,MAAA,KAAA,OAAA,SAAA,CAAA,KAAA,CAAA,MAAA,EAAA,MAAA,IAAA,WAAA,IAAA,SAAA,CAAA,KAAA,CAAA,MAAA,EAAA,MAAA,IAAA,KAAA,YAAA,CAAA,QAAA,EACA,OAAA,KAAA;AACA;AACA;AACA;AACA;;AACA,aAAA,OAAA;AACA,KA1FA;AA2FA,IAAA,aA3FA,yBA2FA,KA3FA,EA2FA;AACA,UAAA,IAAA,GAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,KAAA,EAAA,EAAA,IAAA,KAAA,WAAA,CAAA,KAAA,EAAA,EAAA,IAAA,KAAA,YAAA,CAAA,IAAA,CAAA,EAAA;;AACA,UAAA,IAAA,IAAA,KAAA,CAAA,OAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,EAAA,CAAA,OAAA,CAAA,YAAA,EAAA,sBAAA,EAAA,KAAA,YAAA,CAAA,aAAA,EAAA,KAAA,YAAA,CAAA,QAAA,EAAA,QAAA,EAAA,KAAA;AACA;;AACA,WAAA,gBAAA;AACA,KAjGA;AAkGA,IAAA,eAlGA,2BAkGA,KAlGA,EAkGA;AACA,UAAA,CAAA,KAAA,YAAA,IAAA,CAAA,KAAA,YAAA,CAAA,EAAA,EAAA;AACA,MAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,SAAA,CAAA;AACA,UAAA,IAAA,GAAA,KAAA,WAAA;;AACA,UAAA,IAAA,EAAA,CAEA;AACA,KAzGA;AA0GA,IAAA,eA1GA,2BA0GA,KA1GA,EA0GA;AACA,UAAA,IAAA,GAAA,KAAA,WAAA,CAAA,KAAA,CAAA;AACA,UAAA,QAAA,IAAA,KAAA,QAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA;AACA,WAAA,QAAA,CAAA,IAAA;AACA,WAAA,YAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,YAAA,CAAA,aAAA,GAAA,QAAA;AACA,WAAA,YAAA,CAAA,QAAA,GAAA,KAAA;AACA,KAjHA;AAkHA,IAAA,cAlHA,0BAkHA,SAlHA,EAkHA,KAlHA,EAkHA;AACA,UAAA,CAAA,GAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AACA,UAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,IAAA,SAAA,CAAA,KAAA;AACA,aAAA;AACA,QAAA,CAAA,EAAA,CADA;AACA,QAAA,CAAA,EAAA;AADA,OAAA;AAGA,KAxHA;AAyHA,IAAA,UAzHA,sBAyHA,SAzHA,EAyHA,IAzHA,EAyHA,KAzHA,EAyHA;AAAA,iCACA,KAAA,cAAA,CAAA,SAAA,EAAA,KAAA,CADA;AAAA,UACA,CADA,wBACA,CADA;AAAA,UACA,CADA,wBACA,CADA;;AAEA,aAAA,EAAA,CAAA,GAAA,IAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA,IAAA,CAAA,GAAA,IAAA,CAAA,MAAA,GAAA,SAAA,CAAA,MAAA,CAAA;AACA,KA5HA;AA6HA,IAAA,uBA7HA,mCA6HA,IA7HA,EA6HA,KA7HA,EA6HA;AACA,WAAA,qBAAA,CAAA,IAAA,CAAA;AACA,QAAA,aAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,MAAA,EAAA,CALA;AAMA,QAAA,WAAA,EAAA;AANA,OAAA;AAQA,KAtIA;AAuIA,IAAA,0BAvIA,sCAuIA,IAvIA,EAuIA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,qBAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,qBAAA,CAAA,CAAA,EAAA,aAAA,IAAA,IAAA,EACA,KAAA,qBAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AACA,UAAA,CAAA,KAAA,qBAAA,CAAA,MAAA,EAAA,KAAA,oBAAA,GAAA,CAAA;AACA,KA7IA;AA8IA,IAAA,qBA9IA,iCA8IA,aA9IA,EA8IA,EA9IA,EA8IA;AACA,UAAA,SAAA,GAAA,KAAA,qBAAA,CAAA,IAAA,CAAA,UAAA,SAAA,EAAA;AACA,YAAA,SAAA,CAAA,aAAA,IAAA,aAAA,EAAA,OAAA,IAAA;AACA,OAFA,CAAA;AAGA,UAAA,cAAA,GAAA,SAAA,CAAA,KAAA;AACA,UAAA,QAAA,GAAA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,cAAA;AACA,UAAA,CAAA,GAAA,CAAA,EAAA,GAAA,CAAA,IAAA,cAAA;;AACA,WAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,KAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,aAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,cAAA,EAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,IAAA,GAAA,cAAA,GAAA,IAAA;AACA,mBAAA,SAAA,CAAA,KAAA,CAAA,KAAA,EAAA,MAAA;AACA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,SAAA,CAAA,KAAA,EAAA,EAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,KA/JA;AAgKA,IAAA,kBAhKA,8BAgKA,aAhKA,EAgKA,EAhKA,EAgKA,IAhKA,EAgKA;AACA,UAAA,SAAA,GAAA,KAAA,qBAAA,CAAA,IAAA,CAAA,UAAA,SAAA,EAAA;AACA,YAAA,SAAA,CAAA,aAAA,IAAA,aAAA,EAAA,OAAA,IAAA;AACA,OAFA,CAAA;AAGA,WAAA,IAAA,CAAA,SAAA,CAAA,KAAA,EAAA,EAAA,EAAA,IAAA;AACA,UAAA,QAAA,GAAA,IAAA;AACA,UAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,KAAA;AACA,UAAA,CAAA,GAAA,CAAA,EAAA,GAAA,CAAA,IAAA,KAAA;;AACA,WAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,KAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,aAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,cAAA,EAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,IAAA,GAAA,KAAA,GAAA,IAAA;AACA,YAAA,SAAA,CAAA,KAAA,CAAA,KAAA,EAAA,MAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,EAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA;AACA;AACA;AACA,KAlLA;AAmLA,IAAA,kBAnLA,8BAmLA,aAnLA,EAmLA,KAnLA,EAmLA;AAAA;;AACA,UAAA,SAAA,GAAA,KAAA,qBAAA,CAAA,IAAA,CAAA,UAAA,SAAA,EAAA;AACA,YAAA,SAAA,CAAA,aAAA,IAAA,aAAA,EAAA,OAAA,IAAA;AACA,OAFA,CAAA;AAGA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,EAAA,CAAA,EAAA,IAAA;AACA,OAFA;AAGA,KA1LA;AA2LA,IAAA,eA3LA,6BA2LA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,KAAA;AACA,MAAA,EAAA,CAAA,OAAA,CAAA,sBAAA,EAAA,KAAA,WAAA,CAAA,IAAA,EAAA,KAAA,WAAA,CAAA,SAAA;AACA,KA9LA;AA+LA,IAAA,cA/LA,4BA+LA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,KAAA;AACA,MAAA,EAAA,CAAA,OAAA,CAAA,YAAA,EAAA,qBAAA,EAAA,KAAA,WAAA,CAAA,IAAA,EAAA,KAAA,WAAA,CAAA,SAAA;AACA,KAlMA;AAmMA,IAAA,aAnMA,yBAmMA,EAnMA,EAmMA,KAnMA,EAmMA;AAAA;;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA;AACA,OAFA;AAGA,KAvMA;AAyMA,IAAA,cAzMA,0BAyMA,EAzMA,EAyMA;AACA,WAAA,gBAAA,CAAA,EAAA,EAAA,IAAA,GAAA,KAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,EAAA,EAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,gBAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,KA9MA;AA+MA,IAAA,gBA/MA,4BA+MA,IA/MA,EA+MA,aA/MA,EA+MA,KA/MA,EA+MA;AACA,UAAA,WAAA,GAAA,KAAA,YAAA,CAAA,aAAA,IAAA,QAAA,IAAA,CAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA,EAAA;AACA,aAAA,CAAA,CAAA,IAAA,IAAA,WAAA,IAAA,aAAA,IAAA,KAAA,YAAA,CAAA,aAAA,KAAA,KAAA,YAAA,CAAA,QAAA,IAAA,KAAA,IAAA,IAAA,CAAA,MAAA,IAAA,KAAA,YAAA,CAAA,QAAA,CAAA;AACA,KAlNA;AAmNA,IAAA,WAnNA,uBAmNA,IAnNA,EAmNA,aAnNA,EAmNA,KAnNA,EAmNA;AACA,UAAA,KAAA,gBAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA,OAFA,MAEA;AACA,eAAA,QAAA,IAAA,KAAA,QAAA,IAAA,IAAA,CAAA,EAAA,IAAA,OAAA,IAAA,CAAA,MAAA,IAAA,WAAA;AACA;AACA,KAzNA;AA0NA,IAAA,mBA1NA,+BA0NA,IA1NA,EA0NA,KA1NA,EA0NA,SA1NA,EA0NA;AAAA,kCACA,KAAA,cAAA,CAAA,SAAA,EAAA,KAAA,CADA;AAAA,UACA,CADA,yBACA,CADA;AAAA,UACA,CADA,yBACA,CADA;;AAEA,UAAA,aAAA,GAAA,SAAA,CAAA,aAAA;AACA,uBAAA,CAAA,KAAA,gBAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,8BAAA,CAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA,GAAA,EAAA,mCAAA,CAAA,CAAA,IAAA,GAAA,IAAA,CAAA,MAAA,GAAA,EAAA,eAAA,EAAA,4BACA,KAAA,gBAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,KAAA,QAAA,IAAA,KAAA,QAAA,IAAA,IAAA,CAAA,EAAA,IAAA,OAAA,IAAA,CAAA,MAAA,IAAA,WAAA,GAAA,gBAAA,GAAA,cADA,8CAEA,CAAA,GAAA,CAFA,0CAGA,CAAA,GAAA,CAHA;AAKA,KAlOA;AAmOA,IAAA,YAnOA,wBAmOA,SAnOA,EAmOA,EAnOA,EAmOA,IAnOA,EAmOA;AACA,WAAA,IAAA,CAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA;AACA,UAAA,QAAA,GAAA,IAAA;AACA,UAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,KAAA;AACA,UAAA,CAAA,GAAA,CAAA,EAAA,GAAA,CAAA,IAAA,KAAA;;AACA,WAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,KAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,aAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,cAAA,EAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,IAAA,GAAA,KAAA,GAAA,IAAA;AACA,iBAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,CAAA,KAAA,EAAA,MAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,CAAA,KAAA,CAAA;AACA;AACA;AACA;AACA,KAlPA;AAmPA,IAAA,gBAnPA,4BAmPA,EAnPA,EAmPA,IAnPA,EAmPA;AACA,WAAA,IAAA,CAAA,KAAA,WAAA,EAAA,EAAA,EAAA,IAAA;AACA,KArPA;AAsPA,IAAA,eAtPA,2BAsPA,SAtPA,EAsPA,EAtPA,EAsPA;AACA,UAAA,cAAA,GAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA;AACA,UAAA,QAAA,GAAA,SAAA,CAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,cAAA;AACA,UAAA,CAAA,GAAA,CAAA,EAAA,GAAA,CAAA,IAAA,cAAA;;AACA,WAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,KAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,aAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AACA,cAAA,EAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,IAAA,GAAA,cAAA,GAAA,IAAA;AACA,mBAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,CAAA,KAAA,EAAA,MAAA;AACA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,KAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,KApQA;AAqQA,IAAA,cArQA,0BAqQA,IArQA,EAqQA;AACA,aAAA,QAAA,KAAA,WAAA,CAAA,IAAA,CAAA,KAAA,QAAA,IAAA,KAAA,WAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,KAAA,WAAA,CAAA,IAAA,EAAA,WAAA;AACA,KAvQA;AAwQA,IAAA,QAxQA,sBAwQA;AACA,WAAA,gBAAA;AACA,KA1QA;AA2QA,IAAA,gBA3QA,8BA2QA;AACA,MAAA,CAAA,CAAA,WAAA,CAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,MAAA;AACA,MAAA,SAAA,CAAA,YAAA,CAAA,aAAA,GAAA,CAAA;AACA,MAAA,SAAA,CAAA,YAAA,CAAA,QAAA,GAAA,CAAA,CAAA;AACA,MAAA,SAAA,CAAA,YAAA,CAAA,IAAA,GAAA,EAAA;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,IAAA,GAAA,KAAA;AACA;AAjRA,GApEA;AAuVA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,cAAA,EAAA,cAFA;AAGA,IAAA,IAAA,EAAA,IAHA;AAIA,IAAA,UAAA,EAAA,UAJA;AAKA,IAAA,UAAA,EAAA;AALA,GAvVA;AA8VA,EAAA,OA9VA,qBA8VA;AACA,IAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,SAAA,CAAA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA;AACA,MAAA,CAAA,CAAA,WAAA,CAAA,CAAA,GAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AAAA,eAAA,CAAA,CAAA,KAAA,GAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,KAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,IAAA,EAAA,IAAA,SAAA,CAAA,IAAA,EAAA;AACA,QAAA,SAAA,CAAA,IAAA;AACA;AACA,KAJA;AAKA,GAzWA;AA0WA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,uBAAA,KAAA,CAAA,CAAA,CAAA,cAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AAJA;AA1WA,CAAA","sourcesContent":["<template>\n    <div class=\"inventory\" v-if=\"show\">\n        <div class=\"out\" @click=\"outClick\"></div>\n        <div class=\"container\" >\n            <div class=\"out\" @click=\"outClick\"></div>\n            <div class=\"container_top\">\n                <div class=\"container_top__weapon-item\">\n                    <div class=\"container_top__weapon-item-headline\">\n                        <h2>Оружие</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <itemWeapon \n                            v-for=\"(weapon,i) in weaponSlots\"\n                            :key=\"i\"\n                            @mousedown=\"clickItemPlayer(weapon)\" \n                            @mouseupLeft=\"mouseupPlayer(weapon)\"\n                            @clickRightItem=\"clickRightItem($event,weapon)\"\n                            v-bind:item=\"playerItems[weapon]\"\n                            ></itemWeapon>\n                            <tr>\n                                <td colspan=\"1\"></td>\n                                <td colspan=\"1\">\n                                    <!-- <img src=\"img/inventory/icons/items/weapons/Bz-gas-icon.png\" alt=\"\"> -->\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"container_top__my-item\">\n                    <div class=\"container_top__my-item-headline\">\n                        <h2>{{nickName}}</h2>\n                        <ul>\n                            <li>\n                                <i></i>\n                                {{hunger.toFixed()}}%\n                            </li>\n                            <li>\n                                <i></i>\n                                {{water.toFixed()}}%\n                            </li>\n                        </ul>\n                    </div>\n                    <table cellpadding=\"4\" cellspacing=\"0\">\n                        <tbody>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.glasses\" \n                                :icon=\"'020-vision.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('glasses')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('glasses')\"\n                                @clickRightItem=\"clickRightItem($event,'glasses')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.ears\" \n                                :icon=\"'005-earrings.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('ears')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('ears')\"\n                                @clickRightItem=\"clickRightItem($event,'ears')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.hat\" \n                                :icon=\"'001-baseball-cap.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('hat')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('hat')\"\n                                @clickRightItem=\"clickRightItem($event,'hat')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.card\" \n                                :icon=\"'015-credit-card.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('card')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('card')\"\n                                @clickRightItem=\"clickRightItem($event,'card')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :icon=\"'018-purse.svg'\"\n                                :item=\"playerItems.money\" \n                                ></slotPlayer>\n                            </tr>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.license\" \n                                :icon=\"'011-identity-card.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('license')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('license')\"\n                                @clickRightItem=\"clickRightItem($event,'license')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.armor\" \n                                :icon=\"'007-kevlar.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('armor')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('armor')\"\n                                @clickRightItem=\"clickRightItem($event,'armor')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.accessories\" \n                                :icon=\"'008-bracelet.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('accessories')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('accessories')\"\n                                @clickRightItem=\"clickRightItem($event,'accessories')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.bracelets\" \n                                :icon=\"'006-link.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('bracelets')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('bracelets')\"\n                                @clickRightItem=\"clickRightItem($event,'bracelets')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.watches\" \n                                :icon=\"'012-watch-with-blank-face.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('watches')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('watches')\"\n                                @clickRightItem=\"clickRightItem($event,'watches')\"\n                                ></slotPlayer>\n                            </tr>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.gloves\" \n                                :icon=\"'016-glove.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('gloves')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('gloves')\"\n                                @clickRightItem=\"clickRightItem($event,'gloves')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :icon=\"'hockey-mask_1.svg'\"\n                                :item=\"playerItems.masks\" \n                                v-on:mousedown=\"clickItemPlayer('masks')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('masks')\"\n                                @clickRightItem=\"clickRightItem($event,'masks')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.top\" \n                                :icon=\"'002-winter.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('top')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('top')\"\n                                @clickRightItem=\"clickRightItem($event,'top')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.bag\" \n                                :icon=\"'013-portfolio.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('bag')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('bag')\"\n                                @clickRightItem=\"clickRightItem($event,'bag')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.phone\" \n                                :icon=\"'010-smartphone.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('phone')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('phone')\"\n                                @clickRightItem=\"clickRightItem($event,'phone')\"\n                                ></slotPlayer>\n                            </tr>\n                            <tr class=\"last\">\n                                <slotPlayer \n                                v-show=\"!getHandAllSlot('hand2')\"\n                                :icon=\"'009-palm-of-hand.svg'\"\n                                :item=\"playerItems.hand1\"\n                                v-on:mousedown=\"clickItemPlayer('hand1')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('hand1')\"\n                                @clickRightItem=\"clickRightItem($event,'hand1')\"\n                                :class=\"{'allHand': getHandAllSlot('hand1')}\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                v-show=\"!getHandAllSlot('hand1')\"\n                                :icon=\"'009-palm-of-hand.svg'\"\n                                :item=\"playerItems.hand2\"\n                                v-on:mousedown=\"clickItemPlayer('hand2')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('hand2')\"\n                                @clickRightItem=\"clickRightItem($event,'hand2')\"\n                                :class=\"{'allHand': getHandAllSlot('hand2')}\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.leg\" \n                                :icon=\"'003-pants.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('leg')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('leg')\"\n                                @clickRightItem=\"clickRightItem($event,'leg')\"\n                                ></slotPlayer>\n                                <td rowspan=\"2\"><img :src=\"`${$root.cdn}img/inventory/icons/017-back.svg`\" style=\"transform:rotate(180deg)\" alt=\"\"></td>\n                                <td rowspan=\"2\"><img :src=\"`${$root.cdn}img/inventory/icons/017-back.svg`\" alt=\"\"></td>\n                            </tr>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.foot\" \n                                :icon=\"'004-sports-and-competition.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('foot')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('foot')\"\n                                @clickRightItem=\"clickRightItem($event,'foot')\"\n                                ></slotPlayer>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"container_top__backpack-item\">\n                    <div class=\"container_top__backpack-item-headline\">\n                        <h2>Сумка</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr>\n                            <slotItem \n                                v-for=\"(i) in ((rightInventories[2].width)*(rightInventories[2].height))\" :key=\"i\" \n                                :style=\"getCssItemInventory(rightInventories[2].items[i-1],i-1,rightInventories[2])\" class=\"item\"\n                                v-on:mouseover=\"mouseoverRight(rightInventories[2],i-1)\" \n                                v-on:mousedown=\"clickItemRight(rightInventories[2],i-1)\" \n                                v-on:mouseupLeft=\"mouseupRight(rightInventories[2],i-1)\"\n                                :padding=\"hasShowSlot(rightInventories[2].items[i-1],rightInventories[2].nameInventory,i-1) && typeof rightInventories[2].items[i-1] == 'object' && rightInventories[2].items[i-1].id  ? `calc( ${ (100/rightInventories[2].items[i-1].width)*rightInventories[2].items[i-1].height }%  +  ${ rightInventories[2].items[i-1].width > rightInventories[2].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                :item=\"hasShowSlot(rightInventories[2].items[i-1],rightInventories[2].nameInventory,i-1) ? rightInventories[2].items[i-1] : {}\" \n                                @clickRightItem=\"clickRightItem($event,i-1,2)\"\n                                :class=\"{disabled:!rightInventories[2].show}\"\n                                >\n                            </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                \n            </div>\n            <div class=\"container_middle\">\n                <div class=\"container_middle__topclothes-item\">\n                    <div class=\"container_middle__topclothes-item-headline\">\n                        <h2>Верхняя одежда</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <slotItem \n                                v-for=\"(i) in ((rightInventories[0].width)*(rightInventories[0].height))\" :key=\"i\" \n                                :style=\"getCssItemInventory(rightInventories[0].items[i-1],i-1,rightInventories[0])\" class=\"item\"\n                                v-on:mouseover=\"mouseoverRight(rightInventories[0],i-1)\" \n                                v-on:mousedown=\"clickItemRight(rightInventories[0],i-1)\" \n                                v-on:mouseupLeft=\"mouseupRight(rightInventories[0],i-1)\"\n                                :padding=\"hasShowSlot(rightInventories[0].items[i-1],rightInventories[0].nameInventory,i-1) && typeof rightInventories[0].items[i-1] == 'object' && rightInventories[0].items[i-1].id  ? `calc( ${ (100/rightInventories[0].items[i-1].width)*rightInventories[0].items[i-1].height }%  +  ${ rightInventories[0].items[i-1].width > rightInventories[0].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                :item=\"hasShowSlot(rightInventories[0].items[i-1],rightInventories[0].nameInventory,i-1) ? rightInventories[0].items[i-1] : {}\" \n                                @clickRightItem=\"clickRightItem($event,i-1,0)\"\n                                :class=\"{disabled:!rightInventories[0].show}\"\n                                >\n                                </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"container_middle__bottomclothes-item\">\n                    <div class=\"container_middle__bottomclothes-item-headline\">\n                        <h2>Нижняя одежда</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <slotItem \n                                v-for=\"(i) in ((rightInventories[1].width)*(rightInventories[1].height))\" :key=\"i\" \n                                :style=\"getCssItemInventory(rightInventories[1].items[i-1],i-1,rightInventories[1])\" class=\"item\"\n                                v-on:mouseover=\"mouseoverRight(rightInventories[1],i-1)\" \n                                v-on:mousedown=\"clickItemRight(rightInventories[1],i-1)\" \n                                v-on:mouseupLeft=\"mouseupRight(rightInventories[1],i-1)\"\n                                :padding=\"hasShowSlot(rightInventories[1].items[i-1],rightInventories[1].nameInventory,i-1) && typeof rightInventories[1].items[i-1] == 'object' && rightInventories[1].items[i-1].id  ? `calc( ${ (100/rightInventories[1].items[i-1].width)*rightInventories[1].items[i-1].height }%  +  ${ rightInventories[1].items[i-1].width > rightInventories[1].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                :item=\"hasShowSlot(rightInventories[1].items[i-1],rightInventories[1].nameInventory,i-1) ? rightInventories[1].items[i-1] : {}\" \n                                @clickRightItem=\"clickRightItem($event,i-1,1)\"\n                                :class=\"{disabled:!rightInventories[1].show}\"\n                                >\n                                </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div class=\"container_bottom\" v-if=\"interactionsInventory.length\">\n                <div class=\"container_bottom__trunk-item\">\n                    <div class=\"container_bottom__trunk-item-headline\">\n                        <h2>{{interactionsInventory[interactionsInventoryIndex].title}}</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr >\n                                <slotItem \n                                    v-for=\"(i) in ((interactionsInventory[interactionsInventoryIndex].width)*(interactionsInventory[interactionsInventoryIndex].height))\" :key=\"i\" \n                                    :style=\"getCssItemInventory(interactionsInventory[interactionsInventoryIndex].items[i-1],i-1,interactionsInventory[interactionsInventoryIndex])\" class=\"item\"\n                                    v-on:mouseover=\"mouseoverRight(interactionsInventory[interactionsInventoryIndex],i-1)\" \n                                    v-on:mousedown=\"clickItemRight(interactionsInventory[interactionsInventoryIndex],i-1)\" \n                                    v-on:mouseupLeft=\"mouseupRight(interactionsInventory[interactionsInventoryIndex],i-1)\"\n                                    :padding=\"hasShowSlot(interactionsInventory[interactionsInventoryIndex].items[i-1],interactionsInventory[interactionsInventoryIndex].nameInventory,i-1) && typeof interactionsInventory[interactionsInventoryIndex].items[i-1] == 'object' && interactionsInventory[interactionsInventoryIndex].items[i-1].id  ? `calc( ${ (100/interactionsInventory[interactionsInventoryIndex].items[i-1].width)*interactionsInventory[interactionsInventoryIndex].items[i-1].height }%  +  ${ interactionsInventory[interactionsInventoryIndex].items[i-1].width > interactionsInventory[interactionsInventoryIndex].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                    :item=\"hasShowSlot(interactionsInventory[interactionsInventoryIndex].items[i-1],interactionsInventory[interactionsInventoryIndex].nameInventory,i-1) ? interactionsInventory[interactionsInventoryIndex].items[i-1] : {}\" \n                                    @clickRightItem=\"clickRightItem($event,i-1,interactionsInventoryIndex)\"\n                                    >\n                                </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-item\"\n            v-if=\"interactive.show\"\n            :style=\"{\n                'left': interactive.x+'px',\n                'top': interactive.y+'px',\n            }\"\n        >\n            <h3 class=\"modal-item__headline\">\n                {{interactive.name}}\n            </h3>\n            <ul>\n                <li v-if=\"interactive.use\" @click=\"useInteractive\"><a >Использовать</a></li>\n                <li v-for=\"(weapon,i) in interactive.weaponsAmmo\" :key=\"i\" @click=\"rchargeInteractive(weapon.weaponSlot)\"><a>Зарядить {{weapon.name}}</a></li>\n                <li @click=\"dropInteractive\"><a>Выкинуть</a></li>\n            </ul>\n        </div>\n        <div class=\"itemdrag\"></div>\n    </div>\n</template>\n<style src=\"../../styles/inventory.scss\" lang=\"scss\"></style>\n\n<script>\n\nimport slotItem from './slot.vue';\nimport item from './item.vue';\nimport itemWeapon from './itemWeapon.vue';\nimport titleInventory from './title.vue'\nimport infoItems from '../../../inventory/itemsinfo.js';\nimport slotPlayer from './slotPlayer.vue';\n\nexport default {\n    data() {\n        return {\n            show: false,\n            hunger: 0,\n            water: 0,\n            items: [],\n            dragSLotInfo: {item: {},inventorydrag:\"\",dragslot:-1},\n            infoItems: infoItems,\n            interactionInventory: 0,\n            weaponSlots:[\n                'weapon1',\n                'weapon2',\n                'weapon3',\n                'weapon4',\n            ],\n            interactive: {show:false,slot: 0,inventory: 0,use:false,weaponsAmmo: [],name: ''},\n            playerItems: {\n                // glasses: infoItems[9],\n                // hat: infoItems[8],\n                // top: infoItems[2],\n                // leg: infoItems[3],\n                // foot: infoItems[4],\n                weapon1: infoItems[0],\n                weapon2: infoItems[0],\n                weapon3: infoItems[0],\n                weapon4: infoItems[0],\n                // ammo1: infoItems[21],\n                // ammo2: infoItems[21],\n            },\n            interactionsInventoryIndex: 0,\n            interactionsInventory: [\n                \n            ],\n            rightInventories: [\n                {\n                    show: false,\n                    width: infoItems[2].inventoryWidth,\n                    height: infoItems[2].inventoryHeight,\n                    name: 'Верхняя одежда',\n                    nameInventory: 'top',\n                    items: [\n                        ]\n                },\n                {\n                    show: false,\n                    \"width\": infoItems[3].inventoryWidth,\n                    \"height\": infoItems[3].inventoryHeight,\n                    name: 'Штаны',\n                    nameInventory: 'leg',\n                    items: [\n                        \n                    ]\n                },\n                {\n                    show: false,\n                    width: infoItems[63].inventoryWidth,\n                    nameInventory: 'bag',\n                    height: infoItems[63].inventoryHeight,\n                    name: 'Сумка',\n                    items: [\n                        \n                    ]\n                },\n            ],\n            \n        };\n    },\n    methods: {\n        clickRightItem(event,slot,inventory = \"player\"){\n            let item = inventory == \"player\" ? this.playerItems[slot] : this.rightInventories[inventory].items[slot];\n            if(!item || !item.id) return;\n            this.interactive.show = true;\n            this.interactive.slot = slot;\n            this.interactive.x = event.pageX;\n            this.interactive.y = event.pageY;\n            this.interactive.use = inventory != \"player\" || infoItems[item.id].isUse;\n            // Если предмет патроны\n            if(inventory != \"player\")inventory = this.rightInventories[inventory].nameInventory\n            this.interactive.inventory = inventory;\n            this.interactive.weaponsAmmo = [];\n            this.interactive.name = this.getNameItem(item);\n            if(item.id == 19){\n                let weaponSlots = this.weaponSlots;\n                for (let i = 0; i < weaponSlots.length; i++) {\n                    const weaponSlot = weaponSlots[i];\n                    let itemWeapon = this.playerItems[weaponSlot];\n                    if(itemWeapon && itemWeapon.id){\n                        let itemInfo = infoItems[itemWeapon.id];\n                        if(itemInfo.type == \"weapon\" && itemInfo.id != 7){\n                            this.interactive.weaponsAmmo.push({\n                                name: itemInfo.name,\n                                weaponSlot\n                            })\n                        }\n                    }\n                }\n            }\n        },\n        getNameItem(item){\n            if(item.id == 1)return `${item.name} ${item.name_cart} ${item.surname}`;\n            else return item.name;\n        },\n        hide(){\n            this.show = false;\n            mp.trigger(\"guitoggle\", this.show);\n            this.offDraggableItem();\n        },\n        clickItemRight(inventory,index){\n            let item = inventory.items[index];\n            this.dragSLotInfo.inventorydrag = inventory.nameInventory;\n            this.dragSLotInfo.dragslot = index;\n            this.dragItem(item);\n        },\n        dragItem(item){\n            this.interactive.show = false;  \n            $(\".itemdrag\").css(\"background-image\",`url(${this.$root.cdn}img/items/${item.image})`)\n            this.dragSLotInfo.item = item;\n            inventory.interactive.show = false;\n        },\n        rchargeInteractive(weaponSlot){\n            this.interactive.show = false;\n            mp.trigger('CallRemote',\"INVENTORY::RCHARGE_ITEM\",this.interactive.slot,this.interactive.inventory,weaponSlot);\n        },\n        mouseupRight(inventory,index){\n            if(!this.dragSLotInfo.item.id)return;\n            if(!inventory.show && !inventory.interactive)return;\n            let free = this.isFreeItem(inventory,this.dragSLotInfo.item,index);\n            if(free && this.dragSLotInfo.dragslot !== -1){\n                mp.trigger(\"CallRemote\",\"INVENTORY::DRAG_SLOT\",this.dragSLotInfo.inventorydrag,this.dragSLotInfo.dragslot,inventory.nameInventory,index)\n            }\n            this.offDraggableItem()\n        },\n        mouseoverRight(inventory,index){\n            if(!this.dragSLotInfo.item || !this.dragSLotInfo.item.id)return;\n            let free = this.isFreeItem(inventory,this.dragSLotInfo.item,index);\n            if(free){\n                \n            }\n        },\n        isFreeItem(inventory,item,index){\n            let hasSize = this.isSizeItem(inventory,item,index);\n            if(hasSize){\n                let infoitem = infoItems[item.id]\n                let inventoryWidth = inventory.width\n                let x = index%inventoryWidth;\n                let y = (index-x)/inventoryWidth;\n                for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                    for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                        if(!(x == xFor && y == yFor)){\n                            let index = yFor * inventoryWidth + xFor;\n                            if(inventory.items[index] && inventory.items[index].id  && this.dragSLotInfo.dragslot != index || inventory.items[index] &&  typeof inventory.items[index].linkId != \"undefined\" && inventory.items[index].linkId != this.dragSLotInfo.dragslot)\n                            return false;\n                        }\n                    }\n                }\n            }\n            return hasSize;\n        },\n        mouseupPlayer(index){\n            let free = !this.playerItems[index] ||  !this.playerItems[index].id  ||  this.playerItems[index].id == this.dragSLotInfo.item.id;\n            if(free || index.indexOf('weapon') != -1){\n                mp.trigger(\"CallRemote\",\"INVENTORY::DRAG_SLOT\",this.dragSLotInfo.inventorydrag,this.dragSLotInfo.dragslot,\"player\",index)\n            }\n            this.offDraggableItem();\n        },\n        mouseoverPlayer(index){\n            if(!this.dragSLotInfo || !this.dragSLotInfo.id)return;\n            inventory = this.rightInventories[inventory];\n            let free = this.playerItems;\n            if(free){\n                \n            }\n        },\n        clickItemPlayer(index){\n            let item = this.playerItems[index];\n            if(typeof item != 'object' || !item.id )return;\n            this.dragItem(item);\n            this.dragSLotInfo.item = item;\n            this.dragSLotInfo.inventorydrag = \"player\";\n            this.dragSLotInfo.dragslot = index;\n        },\n        getCoordsIndex(inventory,index){\n            let x = index%inventory.width;\n            let y = (index-x)/inventory.width;\n            return {\n                x,y\n            }\n        },\n        isSizeItem(inventory,item,index){\n            let {x,y} = this.getCoordsIndex(inventory,index);\n            return !(x+item.width > inventory.width || y+item.height > inventory.height)\n        },\n        addInteractionInventory(name,title){\n            this.interactionsInventory.push({\n                nameInventory:name,\n                title:title,\n                items: [],\n                width: 13,\n                height: 2,\n                interactive: true\n            })\n        },\n        removeInteractionInventory(name){\n            for(let i=0;i<this.interactionsInventory.length;i++){\n                if(this.interactionsInventory[i].nameInventory == name)\n                    this.interactionsInventory.splice(i, 1);\n            }\n            if(!this.interactionsInventory.length) this.interactionInventory = 0;\n        },\n        removeInteractionItem(nameInventory,id){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            let inventoryWidth = inventory.width;\n            let infoitem = infoItems[inventory.items[id].id];\n            let x = id%inventoryWidth;\n            let y = (id-x)/inventoryWidth;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * inventoryWidth + xFor;\n                        delete inventory.items[index].linkId\n                    }\n                }\n            }\n            this.$set(inventory.items,id,JSON.parse(JSON.stringify(infoItems[0])));\n        },\n        setInteractionItem(nameInventory,id,item){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            this.$set(inventory.items,id,item);\n            let infoitem = item;\n            let width = inventory.width;\n            let x = id%width;\n            let y = (id-x)/width;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * width + xFor;\n                       inventory.items[index].linkId = id;\n                        this.$set(inventory.items,index,inventory.items[index]);\n                    }\n                }\n            }\n        },\n        setIteractiveItems(nameInventory,items){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            items.forEach((item,i)=>{\n                this.$set(inventory.items,i,item);\n            })\n        },\n        dropInteractive(){\n            this.interactive.show = false;\n            mp.trigger('INVENTORY::DROP_ITEM', this.interactive.slot,this.interactive.inventory);\n        },\n        useInteractive(){\n            this.interactive.show = false;\n            mp.trigger('CallRemote','INVENTORY::USE_ITEM', this.interactive.slot,this.interactive.inventory);\n        },\n        setRightItems(id,items){\n            items.forEach((item,i)=>{\n                this.$set(this.rightInventories[id].items,i,item);\n            })\n        },\n        \n        hideRightItems(id){\n            this.rightInventories[id].show = false;\n            for (let i = 0; i < this.rightInventories[id].width*this.rightInventories[id].height; i++) {\n                this.$set(this.rightInventories[id].items,i,JSON.parse(JSON.stringify(infoItems[0])));   \n            }\n        },\n        isDragCurentItem(item,nameInventory,index){\n            let hasItemDrag = (this.dragSLotInfo.inventorydrag != \"player\" && !!this.dragSLotInfo.item.id)\n            return (!!item && hasItemDrag && nameInventory == this.dragSLotInfo.inventorydrag && (this.dragSLotInfo.dragslot == index || item.linkId == this.dragSLotInfo.dragslot));\n        },\n        hasShowSlot(item,nameInventory,index){\n            if(this.isDragCurentItem(item,nameInventory,index)){\n                return false\n            }else{\n                return typeof item != 'object' || item.id  || typeof item.linkId == 'undefined'\n            }\n        },\n        getCssItemInventory(item,index,inventory){\n            let {x,y} = this.getCoordsIndex(inventory,index);\n            let nameInventory = inventory.nameInventory;\n            return `${!this.isDragCurentItem(item,nameInventory,index)   ? `grid-column-end: ${!!item ? item.width : ''} span;  grid-row-end: ${!!item ? item.height : ''} span ;` : ''} \n            ${ this.isDragCurentItem(item,nameInventory,index) || (typeof item != 'object' || item.id  || typeof item.linkId == 'undefined')  ?  'display: flex;' : 'display:none'} ;\n            gridColumnStart: ${x+1};\n            gridRowStart: ${y+1};\n            `\n        },\n        setRightItem(inventory,id,item){\n            this.$set(this.rightInventories[inventory].items,id,item);\n            let infoitem = item;\n            let width = this.rightInventories[inventory].width;\n            let x = id%width;\n            let y = (id-x)/width;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * width + xFor;\n                        this.rightInventories[inventory].items[index].linkId = id;\n                        this.$set(this.rightInventories[inventory].items,index,this.rightInventories[inventory].items[index]);\n                    }\n                }\n            }\n        },\n        updateItemPlayer(id,item){\n            this.$set(this.playerItems,id,item);\n        },\n        removeRightItem(inventory,id){\n            let inventoryWidth = this.rightInventories[inventory].width;\n            let infoitem = infoItems[this.rightInventories[inventory].items[id].id];\n            let x = id%inventoryWidth;\n            let y = (id-x)/inventoryWidth;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * inventoryWidth + xFor;\n                        delete this.rightInventories[inventory].items[index].linkId\n                    }\n                }\n            }\n            this.$set(this.rightInventories[inventory].items,id,JSON.parse(JSON.stringify(infoItems[0])));\n        },\n        getHandAllSlot(hand){\n            return typeof this.playerItems[hand] == 'object'  && this.playerItems[hand].id != 0 && this.playerItems[hand].allHandSlot;\n        },\n        outClick(){\n            this.offDraggableItem()\n        },\n        offDraggableItem(){\n            $(\".itemdrag\").css(\"background-image\",'none');\n            inventory.dragSLotInfo.inventorydrag = 0;\n            inventory.dragSLotInfo.dragslot = -1;\n            inventory.dragSLotInfo.item = {};\n            inventory.interactive.show = false;\n        }\n    },\n    components:{\n        slotItem,\n        titleInventory,\n        item,\n        itemWeapon,\n        slotPlayer\n    },\n    created(){\n        window.inventory = this;\n        $(document).mousemove(function(e){\n            if(!window.inventory.show)return;\n            $(\".itemdrag\").css({ \"left\": e.pageX - 25, \"top\": e.pageY - 25 });\n        }); \n        $(\"body\").keyup(function(event){\n            if(event.which == 27 && inventory.show){\n                inventory.hide();\n            }\n        })\n    },\n    computed: {\n        nickName(){\n            let names = window.nickName.split(' ')\n            return `${names[0]} ${names[1][0]}.`;\n        }\n    },\n}\n</script>"],"sourceRoot":"src/inventory"}]}