{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\apps\\contacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\apps\\contacts.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var character = ['#', \"А\", \"Б\", \"В\", \"Г\", \"Д\", \"Е\", \"Ж\", \"З\", \"И\", \"Й\", \"К\", \"Л\", \"М\", \"Н\", \"О\", \"П\", \"Р\", \"С\", \"Т\", \"У\", \"Ф\", \"Х\", \"Ц\", \"Ч\", \"Ш\", \"Щ\", \"Ъ\", \"Ы\", \"Ь\", \"Э\", \"Ю\", \"Я\", 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    return {\n      character: character,\n      showNewContact: false,\n      filter: ''\n    };\n  },\n  props: {\n    'phone': Number,\n    contacts: Array\n  },\n  created: function created() {\n    var _this = this;\n\n    mp.on(\"PHONE::ADD_CONTACT_CALLBACK\", function (name, number) {\n      _this.contacts.push({\n        name: name + \"\",\n        number: number\n      });\n    });\n    mp.on(\"PHONE::DEL_CONTACT_CALLBACK\", function (contact) {\n      var idx = _this.contacts.findIndex(function (cont) {\n        if (contact.name == cont.name && contact.number == cont.number) return true;\n      });\n\n      if (idx != -1) _this.contacts.splice(idx, 1);\n    });\n  },\n  computed: {\n    filteredContacts: function filteredContacts() {\n      try {\n        var vm = this;\n        var result = {};\n        var filter = this.filter.length > 0 ? this.filter.toLowerCase() : false;\n        var contacts = this.contacts;\n        contacts.forEach(function (c) {\n          if (filter) {\n            if (c.name.toLowerCase().indexOf(filter) === -1 && (!c.remark || c.remark.toLowerCase().indexOf(filter) === -1)) {\n              return;\n            }\n          }\n\n          var char = \"\" + c.name[0].toUpperCase();\n\n          if (vm.character.indexOf(char) > -1) {\n            if (!result[char]) {\n              result[char] = [];\n            }\n\n            result[char].push(c);\n          } else {\n            if (!result['#']) {\n              result['#'] = [];\n            }\n\n            result['#'].push(c);\n          }\n        });\n        return result;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    filteredCharacter: function filteredCharacter() {\n      var _this2 = this;\n\n      if (!this.filteredContacts) return [];\n      return this.character.filter(function (char) {\n        if (_this2.filteredContacts[char]) return true;\n      });\n    }\n  },\n  components: {},\n  methods: {\n    back: function back() {\n      if (this.showNewContact) return this.showNewContact = false;\n      this.$emit('back');\n    },\n    openNewContacts: function openNewContacts() {\n      this.showNewContact = true;\n    },\n    addContact: function addContact() {\n      var name = this.name;\n      var number = parseInt(this.number);\n      this.showNewContact = false;\n      mp.trigger('CallRemote', 'PHONE::ADD_CONTACT', name, number);\n    },\n    delContact: function delContact(contact) {\n      mp.trigger('CallRemote', 'PHONE::DEL_CONTACT', JSON.stringify(contact));\n    },\n    call: function call(number) {\n      mp.trigger('CallRemote', 'PHONE::CALL', number);\n    },\n    callDefault: function callDefault(call) {\n      mp.trigger('CallRemote', call);\n    }\n  }\n}; // Well, hu, you have no module so just keep your component somewhere.",{"version":3,"sources":["contacts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"contacts\" >\n        <div class=\"title\">\n            <div class=\"back\" @click=\"back\">\n                <i class=\"fal fa-angle-left\" ></i>\n            </div>\n            <h1>Контакты</h1>\n            <div class=\"right\" >\n                <i class=\"fal fa-plus\" v-if=\"!showNewContact\" @click=\"openNewContacts\"></i>\n                <i class=\"fal fa-times exit\" v-else @click=\"showNewContact = false\"></i>\n            </div>\n        </div>\n        <div class=\"padding\">\n            <div class=\"myPhone\">\n                <div class=\"icon\">\n                    <i class=\"iw contact_avatar\"></i>\n                </div>\n                <div class=\"right\">\n                    <h3>\n                        Ваш номер\n                    </h3>\n                    <span>{{phone}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"contacts\" >\n            <div class=\"character\" v-for=\"char in filteredCharacter\"  :key=\"char\">\n                <div class=\"contact\">\n                    <div class=\"padding\">\n                        {{char}}\n                    </div>\n                    <div class=\"name\" v-for=\"(contact, key) in filteredContacts[char]\" :key=\"key\" @click=\"contact.callRemote ? callDefault(contact.callRemote) : call(contact.number)\">\n                        {{contact.name}}<div class=\"right\" v-if=\"!contact.callRemote\"><i class=\"fal fa-times\" @click=\"delContact(contact)\"></i></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"newContacts\" v-if=\"showNewContact\">\n            <div class=\"padding\">\n                <h1 >Новый контакт</h1>\n                <input type=\"text\" placeholder=\"Имя\" v-model=\"name\">\n                <input type=\"number\" placeholder=\"Номер\" v-model=\"number\">\n                <div class=\"but\" @click=\"addContact\">Добавить</div>\n            </div>\n        </div>\n    </div>\n</template>\n<style src=\"../../../styles/phone/contacts.scss\" lang=\"scss\"></style>\n\n<script>\n\n\nexport default {\n    data() {\n        const character = ['#',\"А\",\"Б\",\"В\",\"Г\",\"Д\",\"Е\",\"Ж\",\"З\",\"И\",\"Й\",\"К\",\"Л\",\"М\",\"Н\",\"О\",\"П\",\"Р\",\"С\",\"Т\",\"У\",\"Ф\",\"Х\",\"Ц\",\"Ч\",\"Ш\",\"Щ\",\"Ъ\",\"Ы\",\"Ь\",\"Э\",\"Ю\",\"Я\" ,'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n        return {\n            character,\n            showNewContact: false,\n            filter: '',\n        };\n    },\n    props: {\n        'phone': Number,\n        contacts: Array\n    },\n    created(){\n        mp.on(\"PHONE::ADD_CONTACT_CALLBACK\",(name,number)=>{\n            this.contacts.push({\n                name:name+\"\",\n                number\n            })\n        })\n        mp.on(\"PHONE::DEL_CONTACT_CALLBACK\",(contact)=>{\n            let idx = this.contacts.findIndex((cont)=>{\n                if(contact.name == cont.name && contact.number == cont.number)return true;\n            });\n            if(idx != -1)this.contacts.splice(idx,1)\n        })\n    },\n    computed: {\n        filteredContacts: function () {\n            try{\n                const vm = this\n                const result = {}\n                const filter = this.filter.length > 0 ? this.filter.toLowerCase() : false\n                let contacts = this.contacts;\n                \n                contacts.forEach(function (c) {\n                    if (filter) {\n                        if (c.name.toLowerCase().indexOf(filter) === -1 && (!c.remark || c.remark.toLowerCase().indexOf(filter) === -1)) {\n                            return\n                        }\n                    }\n                    const char = \"\"+c.name[0].toUpperCase();\n                    if (vm.character.indexOf(char) > -1) {\n                        if (!result[char]) {\n                            result[char] = []\n                        }\n                        result[char].push(c)\n                    } else {\n                        if (!result['#']) {\n                            result['#'] = []\n                        }\n                        result['#'].push(c)\n                    }\n                })\n                return result\n            }catch(e){\n                console.log(e)\n            }\n        },\n        filteredCharacter(){\n            if(!this.filteredContacts) return [];\n            return this.character.filter((char)=>{\n                if(this.filteredContacts[char])return true;\n            })\n        }\n    },\n    components:{\n    },\n    methods: {\n        back(){\n            if(this.showNewContact)return this.showNewContact = false;\n            this.$emit('back')\n        },\n        openNewContacts(){\n            this.showNewContact = true;\n        },\n        addContact(){\n            let name = this.name;\n            let number = parseInt(this.number);\n            this.showNewContact = false;\n            mp.trigger('CallRemote','PHONE::ADD_CONTACT',name,number);\n        },\n        delContact(contact){\n            mp.trigger('CallRemote','PHONE::DEL_CONTACT',JSON.stringify(contact));\n        },\n        call(number){\n            mp.trigger('CallRemote','PHONE::CALL',number);\n        },\n        callDefault(call){\n            mp.trigger('CallRemote',call);\n\n        }\n    },\n  };\n  // Well, hu, you have no module so just keep your component somewhere.\n</script>"],"sourceRoot":"src/phone/apps"}]}