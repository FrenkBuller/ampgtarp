{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\apps\\sms.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\apps\\sms.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar sms = {\n  data: function data() {\n    return {\n      showNewSms: false,\n      dialog: undefined,\n      numberSend: '',\n      messageSend: '',\n      messageText: ''\n    };\n  },\n  props: {\n    'phone': Number,\n    dialogs: Array,\n    contacts: Array\n  },\n  beforeMount: function beforeMount() {},\n  components: {},\n  created: function created() {\n    var _this = this;\n\n    mp.on(\"PHONE::SEND_MESSAGE_CALLBACK\", function (number, messageInfo) {\n      _this.addSMS(number, messageInfo);\n    });\n    mp.on('PHONE::MESSAGE_CAME', function (number, messageInfo) {\n      if (_this.dialog && number != _this.dialog.number && !_this.sleeping) mp.trigger('alert', 'Вам пришло сообщение от ' + _this.getTextContact(number));\n    });\n  },\n  methods: {\n    back: function back() {\n      if (this.showNewSms) return this.showNewSms = false;\n      if (this.dialog) return this.dialog = undefined;\n      this.$emit('back');\n    },\n    openDialog: function openDialog(mesage) {\n      this.dialog = mesage;\n      this.$nextTick(function () {\n        this.scrollBottom();\n      });\n    },\n    openNewSMS: function openNewSMS() {\n      this.showNewSms = true;\n    },\n    addSMS: function addSMS(number, messageInfo) {\n      var index;\n      var dialog = this.dialogs.find(function (d, i) {\n        if (d.number.toString() == number.toString()) {\n          index = i;\n          return true;\n        }\n\n        ;\n      });\n\n      if (!dialog) {\n        this.dialogs.push({\n          number: number,\n          messages: [messageInfo]\n        });\n      } else {\n        this.dialogs[index].messages.push(messageInfo);\n      }\n    },\n    sendNewMessage: function sendNewMessage() {\n      var message = this.messageSend;\n      var number = parseInt(this.numberSend);\n      this.showNewSms = false;\n      mp.trigger('CallRemote', 'PHONE::SEND_MESSAGE', number, message);\n    },\n    sendMessage: function sendMessage() {\n      var _this2 = this;\n\n      var message = this.messageText;\n      var number = parseInt(this.dialog.number);\n      this.showNewSms = false;\n      mp.trigger('CallRemote', 'PHONE::SEND_MESSAGE', number, message, function (messageInfo) {\n        _this2.messageText = '';\n\n        _this2.addSMS(number, messageInfo);\n\n        _this2.$nextTick(function () {\n          this.scrollBottom();\n        });\n      });\n    },\n    getTime: function getTime(time) {\n      var date = new Date(time);\n      return \"\".concat(date.getHours(), \":\").concat(date.getMinutes());\n    },\n    scrollBottom: function scrollBottom() {\n      this.$refs.messages.scrollTo(0, this.$refs.messages.scrollHeight);\n    },\n    getTextContact: function getTextContact(number) {\n      var contact = this.contacts.find(function (contact) {\n        return contact.number == number;\n      });\n      if (contact) return contact.name;else return number;\n    },\n    gpsSend: function gpsSend() {\n      var number = parseInt(this.dialog.number);\n      mp.trigger(\"PHONE::GPS_SEND\", number);\n    },\n    setGPS: function setGPS(message) {\n      mp.trigger(\"PHONE::SET_GPS\", JSON.stringify(message.position));\n    },\n    delMessage: function delMessage(message) {\n      mp.trigger('CallRemote', 'PHONE::DEL_MESSAGE', this.dialog.number, message);\n    },\n    getLastText: function getLastText(mesage) {\n      var last = mesage.messages[mesage.messages.length - 1];\n      return last.text ? last.text : last.textStreeet;\n    }\n  }\n};\nexport default sms;",{"version":3,"sources":["sms.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"sms\" >\n        <div class=\"newSms\" v-if=\"showNewSms\">\n            <div class=\"title\">\n                <div class=\"back\" @click=\"back\">\n                    <i class=\"fal fa-angle-left\" ></i>\n                </div>\n                <h1>Сообщения</h1>\n            </div>\n            <div class=\"main\" >\n                <div class=\"padding\">\n                    <input placeholder=\"Номер телефона\" type=\"number\" v-model=\"numberSend\">\n                    <textarea placeholder=\"Сообщение\" v-model=\"messageSend\"></textarea>\n                    <div class=\"but\" @click=\"sendNewMessage\">Отправить</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"messages\" v-if=\"!showNewSms && !dialog\">\n            <div class=\"title\">\n                <div class=\"back\">\n                    <i class=\"fal fa-angle-left\" @click=\"back\"></i>\n                </div>\n                <h1>Сообщения</h1>\n                <div class=\"right\" @click=\"openNewSMS\">\n                    <i class=\"iw send_msg\" ></i>\n                </div>\n            </div>\n            <div class=\"items\" >\n                <div class=\"padding\">\n                    <div class=\"item\" v-for=\"(mesage,i) in dialogs\" :key=\"i\" @click=\"openDialog(mesage) \">\n                        <div class=\"icon\">\n                            <i class=\"iw contact_avatar\"></i>\n                        </div>\n                        <div class=\"right\">\n                            <div class=\"top\">\n                                <div class=\"name\">{{getTextContact(mesage.number)}}</div>\n                                <div class=\"time\">{{mesage.time}}</div>\n                            </div>\n                            <div class=\"bottom\">\n                                <div class=\"discription\">{{getLastText(mesage)}}</div>\n                                <div class=\"arrow\"><i class=\"fal fa-angle-right\"></i></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"dialog\" v-else-if=\"!showNewSms\">\n            <div class=\"title\">\n                <div class=\"back\">\n                    <i class=\"fal fa-angle-left\" @click=\"back\"></i>\n                </div>\n                <h1>{{getTextContact(dialog.number)}}</h1>\n                <div class=\"right\" >\n                    <div class=\"gpsSend\" @click=\"gpsSend\"><i class=\"fas fa-map-marker-alt\"></i></div>\n                </div>\n            </div>\n            <div class=\"messages\" ref=\"messages\">\n                <div class=\"message\" v-for=\"(message,i) in dialog.messages\" :key=\"i\" :class=\"{'my-message':message.phone==phone}\">\n                    <div class=\"del\" @click=\"delMessage(message)\">\n                        <i class=\"fal fa-times\"></i>\n                    </div>\n                    <div v-if=\"message.textStreeet\">\n                        <div class=\"text\">{{message.textStreeet}}</div>\n                        <div class=\"time\">\n                            <div class=\"but\" @click=\"setGPS(message)\">Поставить метку <i class=\"fas fa-map-marker-alt\"></i></div>\n                            <div>{{getTime(message.time)}}</div>\n                        </div>\n                        \n                    </div>\n                    <div v-else>\n                        <div class=\"text\">{{message.text}}</div>\n                        <div class=\"time\">{{getTime(message.time)}}</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"textarea\">\n                <textarea placeholder=\"Напишите что-нибудь\" v-model=\"messageText\" v-on:keydown.enter=\"sendMessage\" cols=\"30\" rows=\"10\" ></textarea>\n                <div class=\"send\" @click=\"sendMessage\"><i class=\"iw gps\"></i></div>\n            </div>\n        </div>\n    </div>\n</template>\n<style src=\"../../../styles/phone/sms.scss\" lang=\"scss\"></style>\n\n<script>\n\n\nlet sms = {\n    data() {\n        return {\n            showNewSms: false,\n            dialog: undefined,\n            numberSend: '',\n            messageSend: '',\n            messageText: ''\n        };\n    },\n    props: {\n        'phone': Number,\n        dialogs: Array,\n        contacts: Array\n    },\n    beforeMount() {\n        \n    },\n    components:{\n    },\n    created() {\n        mp.on(\"PHONE::SEND_MESSAGE_CALLBACK\",(number,messageInfo)=>{\n            this.addSMS(number,messageInfo)\n        })\n        mp.on('PHONE::MESSAGE_CAME',(number,messageInfo)=>{\n            if(this.dialog && number != this.dialog.number && !this.sleeping) mp.trigger('alert','Вам пришло сообщение от '+this.getTextContact(number))\n        })\n    },\n    methods: {\n        back(){\n            if(this.showNewSms)return this.showNewSms = false;\n            if(this.dialog)return this.dialog = undefined;\n            this.$emit('back')\n        },\n        openDialog(mesage){\n            this.dialog = mesage;\n            this.$nextTick(function () {\n                this.scrollBottom();\n            })\n        },\n        openNewSMS(){\n            this.showNewSms = true;\n        },\n        addSMS(number,messageInfo){\n            let index;\n            let dialog = this.dialogs.find((d,i)=>{\n                 if(d.number.toString() == number.toString()){\n                     index = i;\n                     return true\n                 };\n            })\n            if(!dialog){\n                this.dialogs.push({\n                    number: number,\n                    messages: [messageInfo] \n                })\n            }else{\n                this.dialogs[index].messages.push(messageInfo)\n            }\n        },\n        sendNewMessage(){\n            let message = this.messageSend;\n            let number = parseInt(this.numberSend);\n            this.showNewSms = false;\n            mp.trigger('CallRemote','PHONE::SEND_MESSAGE',number,message);\n        },\n        sendMessage(){\n            let message = this.messageText;\n            let number = parseInt(this.dialog.number);\n            this.showNewSms = false;\n            mp.trigger('CallRemote','PHONE::SEND_MESSAGE',number,message,(messageInfo)=>{\n                this.messageText = '';\n                this.addSMS(number,messageInfo)\n                this.$nextTick(function () {\n                    this.scrollBottom();\n                })\n            });\n        },\n        getTime(time){\n            let date = new Date(time);\n            return `${date.getHours()}:${date.getMinutes()}`\n        },\n        scrollBottom(){\n            this.$refs.messages.scrollTo(0,this.$refs.messages.scrollHeight)\n        },\n        getTextContact(number){\n            let contact = this.contacts.find((contact)=>{\n                return contact.number == number\n            })\n            if(contact)return contact.name;\n            else return number;\n        },\n        gpsSend(){\n            let number = parseInt(this.dialog.number);\n            mp.trigger(\"PHONE::GPS_SEND\",number);\n        },\n        setGPS(message){\n            mp.trigger(\"PHONE::SET_GPS\",JSON.stringify(message.position));\n        },\n        delMessage(message){\n             mp.trigger('CallRemote','PHONE::DEL_MESSAGE',this.dialog.number,message);\n        },\n        getLastText(mesage){\n            let last = mesage.messages[mesage.messages.length-1];\n            return last.text ? last.text : last.textStreeet;\n        }\n    },\n  };\n\nexport default sms;\n</script>"],"sourceRoot":"src/phone/apps"}]}