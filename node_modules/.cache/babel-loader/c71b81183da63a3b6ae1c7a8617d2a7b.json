{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\index.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport homePage from \"./apps/homePage.vue\";\nimport profile from \"./apps/profile.vue\";\nimport sms from \"./apps/sms.vue\";\nimport contacts from \"./apps/contacts.vue\";\nimport gps from \"./apps/gps.vue\";\nimport call from \"./apps/call.vue\";\nimport browser from \"./apps/browser.vue\";\nexport default {\n  data: function data() {\n    return {\n      isShow: false,\n      app: 'homePage',\n      statusBarColor: 'transparent',\n      phone: 45045,\n      time: '',\n      background: 'img/phone/background.jpg',\n      apps: {\n        sms: {\n          dialogs: [{\n            number: 45,\n            messages: [{\n              text: 5\n            }]\n          }]\n        },\n        contacts: {\n          contacts: []\n        },\n        gps: {\n          points: []\n        },\n        call: {\n          window: 'phone',\n          numberCalling: 45045,\n          placeholder: '',\n          playerId: -1,\n          calls: [{\n            number: 45045\n          }]\n        }\n      }\n    };\n  },\n  props: {},\n  computed: {\n    styleBackground: function styleBackground() {\n      var bgImg = this.background;\n      if (!bgImg) return '';\n      return {\n        \"background-image\": 'url(' + this.$root.cdn + bgImg + ')'\n      };\n    }\n  },\n  methods: {\n    defaultBackground: function defaultBackground() {\n      this.background = 'img/phone/background.jpg';\n    },\n    homeButton: function homeButton() {\n      this.app = 'homePage';\n      this.statusBarColor = 'transparent';\n      this.defaultBackground();\n    },\n    open: function open(app) {\n      this.app = app.nameApp;\n\n      if (app.nameApp == 'call' && this.apps.call.window != 'phone') {\n        this.statusBarColor = 'transparent';\n        this.defaultBackground();\n      } else {\n        this.statusBarColor = app.statusBarColor || 'transparent';\n        this.background = app.background;\n      }\n    },\n    hide: function hide() {\n      this.show = false;\n      mp.trigger(\"guitoggle\", this.show);\n    },\n    show: function show() {\n      this.homeButton();\n      this.isShow = true;\n    },\n    changeCleeping: function changeCleeping(toggle) {\n      this.apps.call.sleeping = toggle;\n    },\n    getTextContact: function getTextContact(number) {\n      var contact = this.apps.contacts.contacts.find(function (contact) {\n        return contact.number == number;\n      });\n      if (contact) return contact.name;else return number;\n    },\n    callStart: function callStart(number) {\n      this.apps.call.numberCalling = number;\n      this.app = 'call';\n      this.statusBarColor = 'transparent';\n      this.defaultBackground();\n    },\n    callStop: function callStop() {\n      this.apps.call.window = 'phone';\n      this.background = '';\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    window.phone = this;\n    var timer = setInterval(updateTime, 1000);\n    updateTime();\n\n    function updateTime() {\n      var cd = new Date();\n      window.phone.time = zeroPadding(cd.getUTCHours() + 3, 2) + ':' + zeroPadding(cd.getUTCMinutes(), 2);\n    }\n\n    ;\n\n    function zeroPadding(num, digit) {\n      var zero = Array(digit).fill('0').join('');\n      return (zero + num).slice(-digit);\n    }\n\n    mp.on('PHONE::MESSAGE_CAME', function (number, messageInfo) {\n      var index;\n\n      var dialog = _this.apps.sms.dialogs.find(function (d, i) {\n        if (d.number.toString() == number.toString()) {\n          index = i;\n          return true;\n        }\n\n        ;\n      });\n\n      if (!dialog) {\n        _this.apps.sms.dialogs.push({\n          number: number,\n          messages: [messageInfo]\n        });\n      } else {\n        _this.apps.sms.dialogs[index].messages.push(messageInfo);\n      }\n\n      if (_this.app != 'sms') mp.trigger('alert', 'Вам пришло сообщение от ' + _this.getTextContact(number));\n    });\n    mp.on('PHONE::DEL_MESSAGE_SUCCESS', function (number, message) {\n      var index = _this.apps.sms.dialogs.findIndex(function (d) {\n        if (d.number == number) return true;\n      });\n\n      if (index == -1) return;\n\n      var idx = _this.apps.sms.dialogs[index].messages.findIndex(function (d) {\n        if (d.time == message.time) return true;\n      });\n\n      if (idx != -1) {\n        _this.apps.sms.dialogs[index].messages.splice(idx, 1);\n      }\n    });\n    mp.on('PHONE::CALLING', function (number) {\n      _this.callStart(number);\n\n      _this.apps.call.window = 'CALLING';\n    });\n    mp.on('PHONE::CALL', function (number, date) {\n      if (!_this.apps.call.sleeping) {\n        if (!_this.isShow) mp.trigger('PHONE::TOGGLE');\n      } else mp.trigger('alert', 'Вам звонит ' + _this.getTextContact(number));\n\n      _this.callStart(number);\n\n      _this.apps.call.window = 'CALL';\n\n      _this.apps.call.calls.push({\n        number: number,\n        date: date\n      });\n    });\n    mp.on('PHONE::CALL_BUSY', function (number) {\n      _this.callStart(number);\n\n      _this.apps.call.window = 'CALL_BUSY';\n    });\n    mp.on('PHONE::CALL_SIGNAL', function (number, date) {\n      _this.callStart(number);\n\n      _this.apps.call.window = 'CALL_SIGNAL';\n\n      _this.apps.call.calls.push({\n        number: number,\n        date: date\n      });\n    });\n    mp.on('PHONE::CALL_START', function (number) {\n      _this.callStart(number);\n\n      _this.apps.call.window = 'CALLING';\n    });\n    mp.on('PHONE::CALL_STOP', function (number) {\n      _this.callStop(number);\n    });\n    $(\"body\").keyup(function (event) {\n      if (event.which == 27 && phone.isShow) {\n        phone.hide();\n      }\n    });\n  },\n  components: {\n    homePage: homePage,\n    profile: profile,\n    sms: sms,\n    contacts: contacts,\n    gps: gps,\n    call: call,\n    browser: browser\n  }\n}; // Well, hu, you have no module so just keep your component somewhere.",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"phone\" v-if=\"isShow\">\n        <div class=\"main\">\n            <div class=\"container\" :style=\"styleBackground\">\n                <div class=\"status\" :style=\"'background-color:'+ statusBarColor\">\n                    <div class=\"left\"><i class=\"iw network\"></i>WESTRP</div>\n                    <div class=\"center\">{{time}}</div>\n                    <div class=\"right\">100%<i class=\"iw battery\"></i></div>\n                </div>\n                <div class=\"app\">\n                    <keep-alive>\n                        <component \n                        v-on:back=\"homeButton\" \n                        v-on:sleeping=\"changeCleeping($event)\" \n                        v-on:callStop=\"callStop\" \n                        @open=\"open($event)\" :is=\"app\" \n                        v-bind:sleeping=\"apps.call.sleeping\" \n                        v-bind:phone=\"phone\" \n                        v-bind:contacts=\"apps.contacts.contacts\" \n                        v-bind=\"apps[app]\"\n                         ></component>\n                    </keep-alive>\n                </div>\n            </div>\n            <div class=\"homeButton\" @click=\"homeButton\">\n\n            </div>\n        </div>\n        <div class=\"background\"></div>\n    </div>\n</template>\n<style src=\"../../styles/phone/phone.scss\" lang=\"scss\"></style>\n\n<script>\n\nimport homePage from './apps/homePage.vue';\nimport profile from './apps/profile.vue';\nimport sms from './apps/sms.vue';\nimport contacts from './apps/contacts.vue';\nimport gps from './apps/gps.vue';\nimport call from './apps/call.vue';\nimport browser from './apps/browser.vue';\n\nexport default {\n    data() {\n        return {\n            isShow: false,\n            app: 'homePage',\n            statusBarColor: 'transparent',\n            phone: 45045,\n            time: '',\n            background: 'img/phone/background.jpg',\n            apps: {\n                sms: {\n                    dialogs: [{number:45,messages:[{text:5}]}]\n                },\n                contacts:{\n                    contacts: [\n                        \n                    ]\n                },\n                gps:{\n                    points: []\n                },\n                call:{\n                    window: 'phone',\n                    numberCalling: 45045,\n                    placeholder: '',\n                    playerId: -1,\n                    calls: [{number:45045}],\n                },\n            }\n        };\n    },\n\n    props: {\n    },\n    computed: {\n        styleBackground: function(){\n            let bgImg = this.background;\n            if(!bgImg)return '';\n            return {\n                \"background-image\": 'url('+this.$root.cdn+bgImg+')',\n            }\n        },\n    },\n    methods: {\n        defaultBackground(){\n            this.background = 'img/phone/background.jpg';\n        },\n        homeButton(){\n            this.app = 'homePage';\n            this.statusBarColor = 'transparent';\n            this.defaultBackground();\n        },\n        open(app){\n            this.app = app.nameApp;\n            if(app.nameApp == 'call' && this.apps.call.window != 'phone'){\n                this.statusBarColor = 'transparent';\n                this.defaultBackground();\n            }else{\n                this.statusBarColor = app.statusBarColor || 'transparent';\n                this.background = app.background;\n            }\n        },\n        hide(){\n            this.show = false;\n            mp.trigger(\"guitoggle\", this.show);\n        },\n        show(){\n            this.homeButton(); \n            this.isShow = true;\n        },\n        changeCleeping(toggle){\n            this.apps.call.sleeping = toggle;\n        },\n        getTextContact(number){\n            let contact = this.apps.contacts.contacts.find((contact)=>{\n                return contact.number == number\n            })\n            if(contact)return contact.name;\n            else return number;\n        },\n        callStart(number){\n            this.apps.call.numberCalling = number;\n            this.app = 'call';\n            this.statusBarColor = 'transparent';\n            this.defaultBackground();\n        },\n        callStop(){\n             this.apps.call.window = 'phone';\n             this.background = '';\n        }\n    },\n    created(){\n        window.phone = this;\n        let timer = setInterval(updateTime, 1000); \n        updateTime(); \n\n        function updateTime() { \n            let cd = new Date(); \n            window.phone.time = zeroPadding(cd.getUTCHours()+3, 2) + ':' + zeroPadding(cd.getUTCMinutes(), 2);\n        }; \n\n        function zeroPadding(num, digit) { \n            let zero = Array(digit).fill('0').join('');\n            return (zero + num).slice(-digit); \n        }\n        mp.on('PHONE::MESSAGE_CAME',(number,messageInfo)=>{\n            let index;\n            let dialog = this.apps.sms.dialogs.find((d,i)=>{\n                 if(d.number.toString() == number.toString()){\n                     index = i;\n                     return true\n                 };\n            })\n            if(!dialog){\n                this.apps.sms.dialogs.push({\n                    number: number,\n                    messages: [messageInfo] \n                })\n            }else{\n                this.apps.sms.dialogs[index].messages.push(messageInfo)\n            }\n            if(this.app != 'sms')mp.trigger('alert','Вам пришло сообщение от '+this.getTextContact(number))\n        }) \n        mp.on('PHONE::DEL_MESSAGE_SUCCESS',(number,message)=>{\n            let index = this.apps.sms.dialogs.findIndex((d)=>{\n                if(d.number == number)return true;\n            })\n            if(index == -1)return;\n            let idx = this.apps.sms.dialogs[index].messages.findIndex((d)=>{\n                if(d.time == message.time)return true;\n            });\n            if(idx != -1){\n                this.apps.sms.dialogs[index].messages.splice(idx,1);\n            }\n        })\n        mp.on('PHONE::CALLING',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALLING';\n        })\n        mp.on('PHONE::CALL',(number,date)=>{\n            if(!this.apps.call.sleeping){\n                if(!this.isShow)mp.trigger('PHONE::TOGGLE')\n            }else mp.trigger('alert','Вам звонит '+this.getTextContact(number))\n            this.callStart(number);\n            this.apps.call.window = 'CALL';\n            this.apps.call.calls.push({\n                number,\n                date: date\n            })\n        })\n        mp.on('PHONE::CALL_BUSY',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALL_BUSY';\n        })\n        mp.on('PHONE::CALL_SIGNAL',(number,date)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALL_SIGNAL';\n            this.apps.call.calls.push({\n                number,\n                date: date\n            })\n        })\n        mp.on('PHONE::CALL_START',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALLING';\n        })\n        mp.on('PHONE::CALL_STOP',(number)=>{\n            this.callStop(number);\n        })\n        $(\"body\").keyup(function(event){\n            if(event.which == 27 && phone.isShow){\n                phone.hide();\n            }\n        })\n    },\n    components:{\n        homePage,\n        profile,\n        sms,\n        contacts,\n        gps,\n        call,\n        browser\n    }   \n  };\n\n  // Well, hu, you have no module so just keep your component somewhere.\n</script>"],"sourceRoot":"src/phone"}]}