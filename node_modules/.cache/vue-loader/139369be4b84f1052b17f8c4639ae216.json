{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\apps\\gps.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\apps\\gps.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nexport default {\n    data() {\n        const character = ['#',\"А\",\"Б\",\"В\",\"Г\",\"Д\",\"Е\",\"Ж\",\"З\",\"И\",\"Й\",\"К\",\"Л\",\"М\",\"Н\",\"О\",\"П\",\"Р\",\"С\",\"Т\",\"У\",\"Ф\",\"Х\",\"Ц\",\"Ч\",\"Ш\",\"Щ\",\"Ъ\",\"Ы\",\"Ь\",\"Э\",\"Ю\",\"Я\" ,'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n        return {\n            character,\n            showNewpoint: false,\n            filter: '',\n            group: undefined,\n            active: -1,\n        };\n    },\n    props: ['points'],\n    created(){\n    },\n    computed: {\n        filteredPoints: function () {\n            try{\n                const vm = this\n                const result = {};\n                let points = this.group ? this.group : this.points;\n                points.forEach(function (c) {\n                    const char = \"\"+c.name[0].toUpperCase();\n                    if (vm.character.indexOf(char) > -1) {\n                        if (!result[char]) {\n                            result[char] = []\n                        }\n                        result[char].push(c)\n                    } else {\n                        if (!result['#']) {\n                            result['#'] = []\n                        }\n                        result['#'].push(c)\n                    }\n                })\n                return result\n            }catch(e){\n                console.log(e)\n            }\n        },\n        filteredCharacter(){\n            if(!this.filteredPoints) return [];\n            return this.character.filter((char)=>{\n                if(this.filteredPoints[char])return true;\n            })\n        }\n    },\n    components:{\n    },\n    methods: {\n        back(){\n            if(this.group)return this.group = undefined;\n            this.$emit('back')\n        },\n        clickPoint(point){\n            if(point.group) this.group = point.group;\n            else if(point.type == 'job') mp.trigger('PHONE::GPS_SET',point.type, point.job)\n            else  mp.trigger('PHONE::GPS_SET',point.type)\n        },\n    },\n  };\n  // Well, hu, you have no module so just keep your component somewhere.\n",{"version":3,"sources":["gps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gps.vue","sourceRoot":"src/phone/apps","sourcesContent":["<template>\n    <div class=\"gps\" >\n        <div>\n            <div class=\"title\">\n                <div class=\"back\" @click=\"back\">\n                    <i class=\"fal fa-angle-left\" ></i>\n                </div>\n                <h1>GPS</h1>\n            </div>\n            <div class=\"main\" >\n                <div class=\"points\" >\n                    <div class=\"character\" v-for=\"char in filteredCharacter\"  :key=\"char\">\n                        <div class=\"point\" v-if=\"filteredPoints && filteredPoints[char]\">\n                            <div class=\"padding\">\n                                {{char}}\n                            </div>\n                            <div class=\"name\" :class=\"{active:i==active}\" v-for=\"(point, key) in filteredPoints[char]\" @click=\"active = key\" :key=\"key\">\n                                <div class=\"padding\" @click=\"clickPoint(point)\">\n                                    {{point.name}} <div class=\"right\"><i class=\"fas fa-map-marker-alt\"></i></div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<style src=\"../../../styles/phone/gps.scss\" lang=\"scss\"></style>\n\n<script>\n\n\nexport default {\n    data() {\n        const character = ['#',\"А\",\"Б\",\"В\",\"Г\",\"Д\",\"Е\",\"Ж\",\"З\",\"И\",\"Й\",\"К\",\"Л\",\"М\",\"Н\",\"О\",\"П\",\"Р\",\"С\",\"Т\",\"У\",\"Ф\",\"Х\",\"Ц\",\"Ч\",\"Ш\",\"Щ\",\"Ъ\",\"Ы\",\"Ь\",\"Э\",\"Ю\",\"Я\" ,'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n        return {\n            character,\n            showNewpoint: false,\n            filter: '',\n            group: undefined,\n            active: -1,\n        };\n    },\n    props: ['points'],\n    created(){\n    },\n    computed: {\n        filteredPoints: function () {\n            try{\n                const vm = this\n                const result = {};\n                let points = this.group ? this.group : this.points;\n                points.forEach(function (c) {\n                    const char = \"\"+c.name[0].toUpperCase();\n                    if (vm.character.indexOf(char) > -1) {\n                        if (!result[char]) {\n                            result[char] = []\n                        }\n                        result[char].push(c)\n                    } else {\n                        if (!result['#']) {\n                            result['#'] = []\n                        }\n                        result['#'].push(c)\n                    }\n                })\n                return result\n            }catch(e){\n                console.log(e)\n            }\n        },\n        filteredCharacter(){\n            if(!this.filteredPoints) return [];\n            return this.character.filter((char)=>{\n                if(this.filteredPoints[char])return true;\n            })\n        }\n    },\n    components:{\n    },\n    methods: {\n        back(){\n            if(this.group)return this.group = undefined;\n            this.$emit('back')\n        },\n        clickPoint(point){\n            if(point.group) this.group = point.group;\n            else if(point.type == 'job') mp.trigger('PHONE::GPS_SET',point.type, point.job)\n            else  mp.trigger('PHONE::GPS_SET',point.type)\n        },\n    },\n  };\n  // Well, hu, you have no module so just keep your component somewhere.\n</script>"]}]}