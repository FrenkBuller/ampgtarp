{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\chat\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\chat\\index.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nlet keyE_down = false;\nlet keyG_down = false;\nexport default {\n    data() {\n        return {\n            chats: ['RP','NONRP','РАЦИЯ','ME'],\n            mode: 0,\n            indexHistory: 0,\n            history: [],\n            chatText: [],\n            showInput: false,\n            size: 0,\n            timeOutChatFade: null,\n            toggle: false,\n            textInput: '',\n            active: false,\n            hasShow: true,\n            friends: [],\n            \n        }\n    },\n    methods: {\n        getTextChat(textInfo){\n            let text = textInfo.text\n            let names = text.match(/%playerName\\[(.+?)\\]?%/gi);\n            if(names !== null){\n                for (let i = 0; i < names.length; i++) {\n                    const name = names[i];\n                    let replaceName = name.match(/%playerName\\[(.+?)\\]?%/)[1];\n                    let nameText = this.friends.indexOf(replaceName) == -1 ?  'Гражданин' : replaceName;\n                    text = text.replace(name,nameText)\n                }\n            }\n            return text;\n        },\n        addFriend(name){\n            this.friends.push(name);\n        },\n        nextMode(event){\n            if(this.mode != this.chats.length-1)this.mode++;\n            else this.mode = 0;\n            this.$refs.input.focus();\n            event.preventDefault();\n        },\n        changeType(chat){\n            this.mode = chat;\n            this.$refs.input.focus();\n        },\n        startTimeOut(){\n            this.timeOutChatFade = setTimeout(()=>{\n                $('#chat').fadeTo(500, 0.4);\n            },60000)\n        },\n        push(text,type,name,id){\n            this.chatText.unshift({\n                text,\n                type,\n                name,\n                id\n            })\n            this.size++;\n            if(this.size > 50){\n                chat.chatText.splice(0,1);\n            }\n            $('#chat').fadeTo(500, 1);\n            if(this.timeOutChatFade)clearTimeout(this.timeOutChatFade)\n            this.startTimeOut();\n        },\n        clear(){\n            this.chatText = [];\n        },\n        activate(toggle){\n            if (toggle == false)\n                this.enableChatInput(false);\n                \n            this.active = toggle;\n        },\n        \n        show(toggle){\n            this.hasShow = toggle;\n            this.active = toggle;\n        },\n        enableChatInput(toggle){\n            this.indexHistory = this.history.length;\n            if(this.active == false\n                && toggle == true)\n                return;\n                if(toggle != this.showInput)mp.invoke(\"focus\", toggle);\n                this.showInput = toggle;\n                mp.trigger(\"changeState\",toggle);\n                if (toggle){\n                    $('#chat').fadeTo(500, 1);\n                    this.$nextTick(function () {\n                        this.$refs.input.focus();\n                    });\n                    if(this.timeOutChatFade)clearTimeout(this.timeOutChatFade)\n                } \n                else{\n                    let chat = this;\n                    $(this.$refs.input).fadeOut('fast', function(){\n                        chat.textInput = \"\";\n                        chat.$refs.container.scrollTop = 0;\n                        chat.startTimeOut();\n                    });\n                }\n        },\n        chatEnter(){\n            let value = this.textInput;\n            this.textInput = \"\";\n            if (value.length > 0) {\n                this.history.push(value)\n                if (value[0] == \"/\"){\n                    value = value.substr(1);\n                    if (value.length > 0)\n                        mp.invoke(\"command\", value);\n                }\n                else{\n                    if(this.chats[this.mode] == 'RP')mp.invoke(\"chatMessage\", value);\n                    else if(this.chats[this.mode] == 'NONRP')mp.invoke(\"command\", \"b \"+value);\n                    else if(this.chats[this.mode] == 'РАЦИЯ')mp.invoke(\"command\", \"f \"+value);\n                    else if(this.chats[this.mode] == 'ME')mp.invoke(\"command\", \"me \"+value);\n                }\n            }\n            this.enableChatInput(false);\n        }\n    },\n    created(){\n        window.chatAPI = this;\n        let chat = this;\n        \n\n        $(\"body\").keydown(function(event){\n\t    \tif( event.which == 69  && chat.showInput === false && keyE_down == false){\n\t    \t\tmp.trigger(\"DownE\");\n\t    \t\tkeyE_down = true;\n\t    \t} \n\t    \tif( event.which == 71  && chat.showInput === false && keyG_down == false){\n\t    \t\tmp.trigger(\"DownG\");\n\t    \t\tkeyG_down = true;\n\t    \t}\n        })\n        $(\"body\").keyup(function(event){\n            if( event.which == 69  && chat.showInput === false) {\n                mp.trigger(\"PressE\");\n                keyE_down = !keyE_down;\n            }\n            if( event.which == 71  && chat.showInput === false) {\n                mp.trigger(\"PressG\");\n                keyG_down = !keyG_down;\n            }\n            if (event.which == 84 && chat.active == true && !chat.showInput){\n                chat.enableChatInput(true);\n                event.preventDefault();\n            } \n            else if (event.which == 13 && chat.showInput){\n                chat.enableChatInput(false);\n            }\n            else if (event.which == 38 && chat.showInput ){\n                if(chat.indexHistory != 0)chat.indexHistory--;\n                else chat.indexHistory = chat.history.length;\n                chat.textInput = chat.history[chat.indexHistory];\n            }\n            else if (event.which == 40 && chat.showInput ){\n                if(chat.indexHistory != chat.history.length)chat.indexHistory++;\n                else chat.indexHistory = 0;\n                chat.textInput = chat.history[chat.indexHistory];\n            }else if(event.which == 27 && chat.showInput){\n                chat.enableChatInput(false);\n            }\n        });\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/chat","sourcesContent":["<template>\n    <div v-if=\"hasShow\">\n        <div id=\"chat\" class=\"ui_element\">\n            <ul id=\"chat_messages\" :class=\"{'active': showInput}\" ref=\"container\">\n                <li v-for=\"(chat,i) in  chatText\" :key=\"i\" v-html=\"getTextChat(chat)\"></li>\n            </ul>\n            <div class=\"inputs\">\n                <input v-if=\"showInput\" id=\"chat_msg\" type=\"text\" spellcheck=\"true\" ref=\"input\" v-model=\"textInput\" @keydown.tab=\"nextMode($event)\"  @keydown.enter=\"chatEnter\" />\n            </div>\n            <div class=\"buttons\" v-if=\"showInput\">\n                <div class=\"but\" v-for=\"(chat,i) in chats\" :key=\"i\" :class=\"{'active': i == mode}\" @click=\"changeType(i)\">{{chat}}</div>\n            </div>\n        </div>\n    </div>\n</template>\n<style lang=\"scss\" src=\"../../styles/chat.scss\"></style>\n\n<script>\n\nlet keyE_down = false;\nlet keyG_down = false;\nexport default {\n    data() {\n        return {\n            chats: ['RP','NONRP','РАЦИЯ','ME'],\n            mode: 0,\n            indexHistory: 0,\n            history: [],\n            chatText: [],\n            showInput: false,\n            size: 0,\n            timeOutChatFade: null,\n            toggle: false,\n            textInput: '',\n            active: false,\n            hasShow: true,\n            friends: [],\n            \n        }\n    },\n    methods: {\n        getTextChat(textInfo){\n            let text = textInfo.text\n            let names = text.match(/%playerName\\[(.+?)\\]?%/gi);\n            if(names !== null){\n                for (let i = 0; i < names.length; i++) {\n                    const name = names[i];\n                    let replaceName = name.match(/%playerName\\[(.+?)\\]?%/)[1];\n                    let nameText = this.friends.indexOf(replaceName) == -1 ?  'Гражданин' : replaceName;\n                    text = text.replace(name,nameText)\n                }\n            }\n            return text;\n        },\n        addFriend(name){\n            this.friends.push(name);\n        },\n        nextMode(event){\n            if(this.mode != this.chats.length-1)this.mode++;\n            else this.mode = 0;\n            this.$refs.input.focus();\n            event.preventDefault();\n        },\n        changeType(chat){\n            this.mode = chat;\n            this.$refs.input.focus();\n        },\n        startTimeOut(){\n            this.timeOutChatFade = setTimeout(()=>{\n                $('#chat').fadeTo(500, 0.4);\n            },60000)\n        },\n        push(text,type,name,id){\n            this.chatText.unshift({\n                text,\n                type,\n                name,\n                id\n            })\n            this.size++;\n            if(this.size > 50){\n                chat.chatText.splice(0,1);\n            }\n            $('#chat').fadeTo(500, 1);\n            if(this.timeOutChatFade)clearTimeout(this.timeOutChatFade)\n            this.startTimeOut();\n        },\n        clear(){\n            this.chatText = [];\n        },\n        activate(toggle){\n            if (toggle == false)\n                this.enableChatInput(false);\n                \n            this.active = toggle;\n        },\n        \n        show(toggle){\n            this.hasShow = toggle;\n            this.active = toggle;\n        },\n        enableChatInput(toggle){\n            this.indexHistory = this.history.length;\n            if(this.active == false\n                && toggle == true)\n                return;\n                if(toggle != this.showInput)mp.invoke(\"focus\", toggle);\n                this.showInput = toggle;\n                mp.trigger(\"changeState\",toggle);\n                if (toggle){\n                    $('#chat').fadeTo(500, 1);\n                    this.$nextTick(function () {\n                        this.$refs.input.focus();\n                    });\n                    if(this.timeOutChatFade)clearTimeout(this.timeOutChatFade)\n                } \n                else{\n                    let chat = this;\n                    $(this.$refs.input).fadeOut('fast', function(){\n                        chat.textInput = \"\";\n                        chat.$refs.container.scrollTop = 0;\n                        chat.startTimeOut();\n                    });\n                }\n        },\n        chatEnter(){\n            let value = this.textInput;\n            this.textInput = \"\";\n            if (value.length > 0) {\n                this.history.push(value)\n                if (value[0] == \"/\"){\n                    value = value.substr(1);\n                    if (value.length > 0)\n                        mp.invoke(\"command\", value);\n                }\n                else{\n                    if(this.chats[this.mode] == 'RP')mp.invoke(\"chatMessage\", value);\n                    else if(this.chats[this.mode] == 'NONRP')mp.invoke(\"command\", \"b \"+value);\n                    else if(this.chats[this.mode] == 'РАЦИЯ')mp.invoke(\"command\", \"f \"+value);\n                    else if(this.chats[this.mode] == 'ME')mp.invoke(\"command\", \"me \"+value);\n                }\n            }\n            this.enableChatInput(false);\n        }\n    },\n    created(){\n        window.chatAPI = this;\n        let chat = this;\n        \n\n        $(\"body\").keydown(function(event){\n\t    \tif( event.which == 69  && chat.showInput === false && keyE_down == false){\n\t    \t\tmp.trigger(\"DownE\");\n\t    \t\tkeyE_down = true;\n\t    \t} \n\t    \tif( event.which == 71  && chat.showInput === false && keyG_down == false){\n\t    \t\tmp.trigger(\"DownG\");\n\t    \t\tkeyG_down = true;\n\t    \t}\n        })\n        $(\"body\").keyup(function(event){\n            if( event.which == 69  && chat.showInput === false) {\n                mp.trigger(\"PressE\");\n                keyE_down = !keyE_down;\n            }\n            if( event.which == 71  && chat.showInput === false) {\n                mp.trigger(\"PressG\");\n                keyG_down = !keyG_down;\n            }\n            if (event.which == 84 && chat.active == true && !chat.showInput){\n                chat.enableChatInput(true);\n                event.preventDefault();\n            } \n            else if (event.which == 13 && chat.showInput){\n                chat.enableChatInput(false);\n            }\n            else if (event.which == 38 && chat.showInput ){\n                if(chat.indexHistory != 0)chat.indexHistory--;\n                else chat.indexHistory = chat.history.length;\n                chat.textInput = chat.history[chat.indexHistory];\n            }\n            else if (event.which == 40 && chat.showInput ){\n                if(chat.indexHistory != chat.history.length)chat.indexHistory++;\n                else chat.indexHistory = 0;\n                chat.textInput = chat.history[chat.indexHistory];\n            }else if(event.which == 27 && chat.showInput){\n                chat.enableChatInput(false);\n            }\n        });\n    }\n}\n</script>\n"]}]}