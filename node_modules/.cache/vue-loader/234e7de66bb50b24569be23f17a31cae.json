{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\phone\\index.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport homePage from './apps/homePage.vue';\nimport profile from './apps/profile.vue';\nimport sms from './apps/sms.vue';\nimport contacts from './apps/contacts.vue';\nimport gps from './apps/gps.vue';\nimport call from './apps/call.vue';\nimport browser from './apps/browser.vue';\n\nexport default {\n    data() {\n        return {\n            isShow: false,\n            app: 'homePage',\n            statusBarColor: 'transparent',\n            phone: 45045,\n            time: '',\n            background: 'img/phone/background.jpg',\n            apps: {\n                sms: {\n                    dialogs: [{number:45,messages:[{text:5}]}]\n                },\n                contacts:{\n                    contacts: [\n                        \n                    ]\n                },\n                gps:{\n                    points: []\n                },\n                call:{\n                    window: 'phone',\n                    numberCalling: 45045,\n                    placeholder: '',\n                    playerId: -1,\n                    calls: [{number:45045}],\n                },\n            }\n        };\n    },\n\n    props: {\n    },\n    computed: {\n        styleBackground: function(){\n            let bgImg = this.background;\n            if(!bgImg)return '';\n            return {\n                \"background-image\": 'url('+this.$root.cdn+bgImg+')',\n            }\n        },\n    },\n    methods: {\n        defaultBackground(){\n            this.background = 'img/phone/background.jpg';\n        },\n        homeButton(){\n            this.app = 'homePage';\n            this.statusBarColor = 'transparent';\n            this.defaultBackground();\n        },\n        open(app){\n            this.app = app.nameApp;\n            if(app.nameApp == 'call' && this.apps.call.window != 'phone'){\n                this.statusBarColor = 'transparent';\n                this.defaultBackground();\n            }else{\n                this.statusBarColor = app.statusBarColor || 'transparent';\n                this.background = app.background;\n            }\n        },\n        hide(){\n            this.show = false;\n            mp.trigger(\"guitoggle\", this.show);\n        },\n        show(){\n            this.homeButton(); \n            this.isShow = true;\n        },\n        changeCleeping(toggle){\n            this.apps.call.sleeping = toggle;\n        },\n        getTextContact(number){\n            let contact = this.apps.contacts.contacts.find((contact)=>{\n                return contact.number == number\n            })\n            if(contact)return contact.name;\n            else return number;\n        },\n        callStart(number){\n            this.apps.call.numberCalling = number;\n            this.app = 'call';\n            this.statusBarColor = 'transparent';\n            this.defaultBackground();\n        },\n        callStop(){\n             this.apps.call.window = 'phone';\n             this.background = '';\n        }\n    },\n    created(){\n        window.phone = this;\n        let timer = setInterval(updateTime, 1000); \n        updateTime(); \n\n        function updateTime() { \n            let cd = new Date(); \n            window.phone.time = zeroPadding(cd.getUTCHours()+3, 2) + ':' + zeroPadding(cd.getUTCMinutes(), 2);\n        }; \n\n        function zeroPadding(num, digit) { \n            let zero = Array(digit).fill('0').join('');\n            return (zero + num).slice(-digit); \n        }\n        mp.on('PHONE::MESSAGE_CAME',(number,messageInfo)=>{\n            let index;\n            let dialog = this.apps.sms.dialogs.find((d,i)=>{\n                 if(d.number.toString() == number.toString()){\n                     index = i;\n                     return true\n                 };\n            })\n            if(!dialog){\n                this.apps.sms.dialogs.push({\n                    number: number,\n                    messages: [messageInfo] \n                })\n            }else{\n                this.apps.sms.dialogs[index].messages.push(messageInfo)\n            }\n            if(this.app != 'sms')mp.trigger('alert','Вам пришло сообщение от '+this.getTextContact(number))\n        }) \n        mp.on('PHONE::DEL_MESSAGE_SUCCESS',(number,message)=>{\n            let index = this.apps.sms.dialogs.findIndex((d)=>{\n                if(d.number == number)return true;\n            })\n            if(index == -1)return;\n            let idx = this.apps.sms.dialogs[index].messages.findIndex((d)=>{\n                if(d.time == message.time)return true;\n            });\n            if(idx != -1){\n                this.apps.sms.dialogs[index].messages.splice(idx,1);\n            }\n        })\n        mp.on('PHONE::CALLING',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALLING';\n        })\n        mp.on('PHONE::CALL',(number,date)=>{\n            if(!this.apps.call.sleeping){\n                if(!this.isShow)mp.trigger('PHONE::TOGGLE')\n            }else mp.trigger('alert','Вам звонит '+this.getTextContact(number))\n            this.callStart(number);\n            this.apps.call.window = 'CALL';\n            this.apps.call.calls.push({\n                number,\n                date: date\n            })\n        })\n        mp.on('PHONE::CALL_BUSY',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALL_BUSY';\n        })\n        mp.on('PHONE::CALL_SIGNAL',(number,date)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALL_SIGNAL';\n            this.apps.call.calls.push({\n                number,\n                date: date\n            })\n        })\n        mp.on('PHONE::CALL_START',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALLING';\n        })\n        mp.on('PHONE::CALL_STOP',(number)=>{\n            this.callStop(number);\n        })\n        $(\"body\").keyup(function(event){\n            if(event.which == 27 && phone.isShow){\n                phone.hide();\n            }\n        })\n    },\n    components:{\n        homePage,\n        profile,\n        sms,\n        contacts,\n        gps,\n        call,\n        browser\n    }   \n  };\n\n  // Well, hu, you have no module so just keep your component somewhere.\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/phone","sourcesContent":["<template>\n    <div class=\"phone\" v-if=\"isShow\">\n        <div class=\"main\">\n            <div class=\"container\" :style=\"styleBackground\">\n                <div class=\"status\" :style=\"'background-color:'+ statusBarColor\">\n                    <div class=\"left\"><i class=\"iw network\"></i>WESTRP</div>\n                    <div class=\"center\">{{time}}</div>\n                    <div class=\"right\">100%<i class=\"iw battery\"></i></div>\n                </div>\n                <div class=\"app\">\n                    <keep-alive>\n                        <component \n                        v-on:back=\"homeButton\" \n                        v-on:sleeping=\"changeCleeping($event)\" \n                        v-on:callStop=\"callStop\" \n                        @open=\"open($event)\" :is=\"app\" \n                        v-bind:sleeping=\"apps.call.sleeping\" \n                        v-bind:phone=\"phone\" \n                        v-bind:contacts=\"apps.contacts.contacts\" \n                        v-bind=\"apps[app]\"\n                         ></component>\n                    </keep-alive>\n                </div>\n            </div>\n            <div class=\"homeButton\" @click=\"homeButton\">\n\n            </div>\n        </div>\n        <div class=\"background\"></div>\n    </div>\n</template>\n<style src=\"../../styles/phone/phone.scss\" lang=\"scss\"></style>\n\n<script>\n\nimport homePage from './apps/homePage.vue';\nimport profile from './apps/profile.vue';\nimport sms from './apps/sms.vue';\nimport contacts from './apps/contacts.vue';\nimport gps from './apps/gps.vue';\nimport call from './apps/call.vue';\nimport browser from './apps/browser.vue';\n\nexport default {\n    data() {\n        return {\n            isShow: false,\n            app: 'homePage',\n            statusBarColor: 'transparent',\n            phone: 45045,\n            time: '',\n            background: 'img/phone/background.jpg',\n            apps: {\n                sms: {\n                    dialogs: [{number:45,messages:[{text:5}]}]\n                },\n                contacts:{\n                    contacts: [\n                        \n                    ]\n                },\n                gps:{\n                    points: []\n                },\n                call:{\n                    window: 'phone',\n                    numberCalling: 45045,\n                    placeholder: '',\n                    playerId: -1,\n                    calls: [{number:45045}],\n                },\n            }\n        };\n    },\n\n    props: {\n    },\n    computed: {\n        styleBackground: function(){\n            let bgImg = this.background;\n            if(!bgImg)return '';\n            return {\n                \"background-image\": 'url('+this.$root.cdn+bgImg+')',\n            }\n        },\n    },\n    methods: {\n        defaultBackground(){\n            this.background = 'img/phone/background.jpg';\n        },\n        homeButton(){\n            this.app = 'homePage';\n            this.statusBarColor = 'transparent';\n            this.defaultBackground();\n        },\n        open(app){\n            this.app = app.nameApp;\n            if(app.nameApp == 'call' && this.apps.call.window != 'phone'){\n                this.statusBarColor = 'transparent';\n                this.defaultBackground();\n            }else{\n                this.statusBarColor = app.statusBarColor || 'transparent';\n                this.background = app.background;\n            }\n        },\n        hide(){\n            this.show = false;\n            mp.trigger(\"guitoggle\", this.show);\n        },\n        show(){\n            this.homeButton(); \n            this.isShow = true;\n        },\n        changeCleeping(toggle){\n            this.apps.call.sleeping = toggle;\n        },\n        getTextContact(number){\n            let contact = this.apps.contacts.contacts.find((contact)=>{\n                return contact.number == number\n            })\n            if(contact)return contact.name;\n            else return number;\n        },\n        callStart(number){\n            this.apps.call.numberCalling = number;\n            this.app = 'call';\n            this.statusBarColor = 'transparent';\n            this.defaultBackground();\n        },\n        callStop(){\n             this.apps.call.window = 'phone';\n             this.background = '';\n        }\n    },\n    created(){\n        window.phone = this;\n        let timer = setInterval(updateTime, 1000); \n        updateTime(); \n\n        function updateTime() { \n            let cd = new Date(); \n            window.phone.time = zeroPadding(cd.getUTCHours()+3, 2) + ':' + zeroPadding(cd.getUTCMinutes(), 2);\n        }; \n\n        function zeroPadding(num, digit) { \n            let zero = Array(digit).fill('0').join('');\n            return (zero + num).slice(-digit); \n        }\n        mp.on('PHONE::MESSAGE_CAME',(number,messageInfo)=>{\n            let index;\n            let dialog = this.apps.sms.dialogs.find((d,i)=>{\n                 if(d.number.toString() == number.toString()){\n                     index = i;\n                     return true\n                 };\n            })\n            if(!dialog){\n                this.apps.sms.dialogs.push({\n                    number: number,\n                    messages: [messageInfo] \n                })\n            }else{\n                this.apps.sms.dialogs[index].messages.push(messageInfo)\n            }\n            if(this.app != 'sms')mp.trigger('alert','Вам пришло сообщение от '+this.getTextContact(number))\n        }) \n        mp.on('PHONE::DEL_MESSAGE_SUCCESS',(number,message)=>{\n            let index = this.apps.sms.dialogs.findIndex((d)=>{\n                if(d.number == number)return true;\n            })\n            if(index == -1)return;\n            let idx = this.apps.sms.dialogs[index].messages.findIndex((d)=>{\n                if(d.time == message.time)return true;\n            });\n            if(idx != -1){\n                this.apps.sms.dialogs[index].messages.splice(idx,1);\n            }\n        })\n        mp.on('PHONE::CALLING',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALLING';\n        })\n        mp.on('PHONE::CALL',(number,date)=>{\n            if(!this.apps.call.sleeping){\n                if(!this.isShow)mp.trigger('PHONE::TOGGLE')\n            }else mp.trigger('alert','Вам звонит '+this.getTextContact(number))\n            this.callStart(number);\n            this.apps.call.window = 'CALL';\n            this.apps.call.calls.push({\n                number,\n                date: date\n            })\n        })\n        mp.on('PHONE::CALL_BUSY',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALL_BUSY';\n        })\n        mp.on('PHONE::CALL_SIGNAL',(number,date)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALL_SIGNAL';\n            this.apps.call.calls.push({\n                number,\n                date: date\n            })\n        })\n        mp.on('PHONE::CALL_START',(number)=>{\n            this.callStart(number);\n            this.apps.call.window = 'CALLING';\n        })\n        mp.on('PHONE::CALL_STOP',(number)=>{\n            this.callStop(number);\n        })\n        $(\"body\").keyup(function(event){\n            if(event.which == 27 && phone.isShow){\n                phone.hide();\n            }\n        })\n    },\n    components:{\n        homePage,\n        profile,\n        sms,\n        contacts,\n        gps,\n        call,\n        browser\n    }   \n  };\n\n  // Well, hu, you have no module so just keep your component somewhere.\n</script>"]}]}