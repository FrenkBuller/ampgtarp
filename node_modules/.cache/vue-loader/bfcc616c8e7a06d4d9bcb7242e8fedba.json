{"remainingRequest":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\inventory\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\src\\inventory\\index.vue","mtime":1558952847000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\west-master\\packages\\server\\HTML\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport slotItem from './slot.vue';\nimport item from './item.vue';\nimport itemWeapon from './itemWeapon.vue';\nimport titleInventory from './title.vue'\nimport infoItems from '../../../inventory/itemsinfo.js';\nimport slotPlayer from './slotPlayer.vue';\n\nexport default {\n    data() {\n        return {\n            show: false,\n            hunger: 0,\n            water: 0,\n            items: [],\n            dragSLotInfo: {item: {},inventorydrag:\"\",dragslot:-1},\n            infoItems: infoItems,\n            interactionInventory: 0,\n            weaponSlots:[\n                'weapon1',\n                'weapon2',\n                'weapon3',\n                'weapon4',\n            ],\n            interactive: {show:false,slot: 0,inventory: 0,use:false,weaponsAmmo: [],name: ''},\n            playerItems: {\n                // glasses: infoItems[9],\n                // hat: infoItems[8],\n                // top: infoItems[2],\n                // leg: infoItems[3],\n                // foot: infoItems[4],\n                weapon1: infoItems[0],\n                weapon2: infoItems[0],\n                weapon3: infoItems[0],\n                weapon4: infoItems[0],\n                // ammo1: infoItems[21],\n                // ammo2: infoItems[21],\n            },\n            interactionsInventoryIndex: 0,\n            interactionsInventory: [\n                \n            ],\n            rightInventories: [\n                {\n                    show: false,\n                    width: infoItems[2].inventoryWidth,\n                    height: infoItems[2].inventoryHeight,\n                    name: 'Верхняя одежда',\n                    nameInventory: 'top',\n                    items: [\n                        ]\n                },\n                {\n                    show: false,\n                    \"width\": infoItems[3].inventoryWidth,\n                    \"height\": infoItems[3].inventoryHeight,\n                    name: 'Штаны',\n                    nameInventory: 'leg',\n                    items: [\n                        \n                    ]\n                },\n                {\n                    show: false,\n                    width: infoItems[63].inventoryWidth,\n                    nameInventory: 'bag',\n                    height: infoItems[63].inventoryHeight,\n                    name: 'Сумка',\n                    items: [\n                        \n                    ]\n                },\n            ],\n            \n        };\n    },\n    methods: {\n        clickRightItem(event,slot,inventory = \"player\"){\n            let item = inventory == \"player\" ? this.playerItems[slot] : this.rightInventories[inventory].items[slot];\n            if(!item || !item.id) return;\n            this.interactive.show = true;\n            this.interactive.slot = slot;\n            this.interactive.x = event.pageX;\n            this.interactive.y = event.pageY;\n            this.interactive.use = inventory != \"player\" || infoItems[item.id].isUse;\n            // Если предмет патроны\n            if(inventory != \"player\")inventory = this.rightInventories[inventory].nameInventory\n            this.interactive.inventory = inventory;\n            this.interactive.weaponsAmmo = [];\n            this.interactive.name = this.getNameItem(item);\n            if(item.id == 19){\n                let weaponSlots = this.weaponSlots;\n                for (let i = 0; i < weaponSlots.length; i++) {\n                    const weaponSlot = weaponSlots[i];\n                    let itemWeapon = this.playerItems[weaponSlot];\n                    if(itemWeapon && itemWeapon.id){\n                        let itemInfo = infoItems[itemWeapon.id];\n                        if(itemInfo.type == \"weapon\" && itemInfo.id != 7){\n                            this.interactive.weaponsAmmo.push({\n                                name: itemInfo.name,\n                                weaponSlot\n                            })\n                        }\n                    }\n                }\n            }\n        },\n        getNameItem(item){\n            if(item.id == 1)return `${item.name} ${item.name_cart} ${item.surname}`;\n            else return item.name;\n        },\n        hide(){\n            this.show = false;\n            mp.trigger(\"guitoggle\", this.show);\n            this.offDraggableItem();\n        },\n        clickItemRight(inventory,index){\n            let item = inventory.items[index];\n            this.dragSLotInfo.inventorydrag = inventory.nameInventory;\n            this.dragSLotInfo.dragslot = index;\n            this.dragItem(item);\n        },\n        dragItem(item){\n            this.interactive.show = false;  \n            $(\".itemdrag\").css(\"background-image\",`url(${this.$root.cdn}img/items/${item.image})`)\n            this.dragSLotInfo.item = item;\n            inventory.interactive.show = false;\n        },\n        rchargeInteractive(weaponSlot){\n            this.interactive.show = false;\n            mp.trigger('CallRemote',\"INVENTORY::RCHARGE_ITEM\",this.interactive.slot,this.interactive.inventory,weaponSlot);\n        },\n        mouseupRight(inventory,index){\n            if(!this.dragSLotInfo.item.id)return;\n            if(!inventory.show && !inventory.interactive)return;\n            let free = this.isFreeItem(inventory,this.dragSLotInfo.item,index);\n            if(free && this.dragSLotInfo.dragslot !== -1){\n                mp.trigger(\"CallRemote\",\"INVENTORY::DRAG_SLOT\",this.dragSLotInfo.inventorydrag,this.dragSLotInfo.dragslot,inventory.nameInventory,index)\n            }\n            this.offDraggableItem()\n        },\n        mouseoverRight(inventory,index){\n            if(!this.dragSLotInfo.item || !this.dragSLotInfo.item.id)return;\n            let free = this.isFreeItem(inventory,this.dragSLotInfo.item,index);\n            if(free){\n                \n            }\n        },\n        isFreeItem(inventory,item,index){\n            let hasSize = this.isSizeItem(inventory,item,index);\n            if(hasSize){\n                let infoitem = infoItems[item.id]\n                let inventoryWidth = inventory.width\n                let x = index%inventoryWidth;\n                let y = (index-x)/inventoryWidth;\n                for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                    for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                        if(!(x == xFor && y == yFor)){\n                            let index = yFor * inventoryWidth + xFor;\n                            if(inventory.items[index] && inventory.items[index].id  && this.dragSLotInfo.dragslot != index || inventory.items[index] &&  typeof inventory.items[index].linkId != \"undefined\" && inventory.items[index].linkId != this.dragSLotInfo.dragslot)\n                            return false;\n                        }\n                    }\n                }\n            }\n            return hasSize;\n        },\n        mouseupPlayer(index){\n            let free = !this.playerItems[index] ||  !this.playerItems[index].id  ||  this.playerItems[index].id == this.dragSLotInfo.item.id;\n            if(free || index.indexOf('weapon') != -1){\n                mp.trigger(\"CallRemote\",\"INVENTORY::DRAG_SLOT\",this.dragSLotInfo.inventorydrag,this.dragSLotInfo.dragslot,\"player\",index)\n            }\n            this.offDraggableItem();\n        },\n        mouseoverPlayer(index){\n            if(!this.dragSLotInfo || !this.dragSLotInfo.id)return;\n            inventory = this.rightInventories[inventory];\n            let free = this.playerItems;\n            if(free){\n                \n            }\n        },\n        clickItemPlayer(index){\n            let item = this.playerItems[index];\n            if(typeof item != 'object' || !item.id )return;\n            this.dragItem(item);\n            this.dragSLotInfo.item = item;\n            this.dragSLotInfo.inventorydrag = \"player\";\n            this.dragSLotInfo.dragslot = index;\n        },\n        getCoordsIndex(inventory,index){\n            let x = index%inventory.width;\n            let y = (index-x)/inventory.width;\n            return {\n                x,y\n            }\n        },\n        isSizeItem(inventory,item,index){\n            let {x,y} = this.getCoordsIndex(inventory,index);\n            return !(x+item.width > inventory.width || y+item.height > inventory.height)\n        },\n        addInteractionInventory(name,title){\n            this.interactionsInventory.push({\n                nameInventory:name,\n                title:title,\n                items: [],\n                width: 13,\n                height: 2,\n                interactive: true\n            })\n        },\n        removeInteractionInventory(name){\n            for(let i=0;i<this.interactionsInventory.length;i++){\n                if(this.interactionsInventory[i].nameInventory == name)\n                    this.interactionsInventory.splice(i, 1);\n            }\n            if(!this.interactionsInventory.length) this.interactionInventory = 0;\n        },\n        removeInteractionItem(nameInventory,id){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            let inventoryWidth = inventory.width;\n            let infoitem = infoItems[inventory.items[id].id];\n            let x = id%inventoryWidth;\n            let y = (id-x)/inventoryWidth;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * inventoryWidth + xFor;\n                        delete inventory.items[index].linkId\n                    }\n                }\n            }\n            this.$set(inventory.items,id,JSON.parse(JSON.stringify(infoItems[0])));\n        },\n        setInteractionItem(nameInventory,id,item){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            this.$set(inventory.items,id,item);\n            let infoitem = item;\n            let width = inventory.width;\n            let x = id%width;\n            let y = (id-x)/width;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * width + xFor;\n                       inventory.items[index].linkId = id;\n                        this.$set(inventory.items,index,inventory.items[index]);\n                    }\n                }\n            }\n        },\n        setIteractiveItems(nameInventory,items){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            items.forEach((item,i)=>{\n                this.$set(inventory.items,i,item);\n            })\n        },\n        dropInteractive(){\n            this.interactive.show = false;\n            mp.trigger('INVENTORY::DROP_ITEM', this.interactive.slot,this.interactive.inventory);\n        },\n        useInteractive(){\n            this.interactive.show = false;\n            mp.trigger('CallRemote','INVENTORY::USE_ITEM', this.interactive.slot,this.interactive.inventory);\n        },\n        setRightItems(id,items){\n            items.forEach((item,i)=>{\n                this.$set(this.rightInventories[id].items,i,item);\n            })\n        },\n        \n        hideRightItems(id){\n            this.rightInventories[id].show = false;\n            for (let i = 0; i < this.rightInventories[id].width*this.rightInventories[id].height; i++) {\n                this.$set(this.rightInventories[id].items,i,JSON.parse(JSON.stringify(infoItems[0])));   \n            }\n        },\n        isDragCurentItem(item,nameInventory,index){\n            let hasItemDrag = (this.dragSLotInfo.inventorydrag != \"player\" && !!this.dragSLotInfo.item.id)\n            return (!!item && hasItemDrag && nameInventory == this.dragSLotInfo.inventorydrag && (this.dragSLotInfo.dragslot == index || item.linkId == this.dragSLotInfo.dragslot));\n        },\n        hasShowSlot(item,nameInventory,index){\n            if(this.isDragCurentItem(item,nameInventory,index)){\n                return false\n            }else{\n                return typeof item != 'object' || item.id  || typeof item.linkId == 'undefined'\n            }\n        },\n        getCssItemInventory(item,index,inventory){\n            let {x,y} = this.getCoordsIndex(inventory,index);\n            let nameInventory = inventory.nameInventory;\n            return `${!this.isDragCurentItem(item,nameInventory,index)   ? `grid-column-end: ${!!item ? item.width : ''} span;  grid-row-end: ${!!item ? item.height : ''} span ;` : ''} \n            ${ this.isDragCurentItem(item,nameInventory,index) || (typeof item != 'object' || item.id  || typeof item.linkId == 'undefined')  ?  'display: flex;' : 'display:none'} ;\n            gridColumnStart: ${x+1};\n            gridRowStart: ${y+1};\n            `\n        },\n        setRightItem(inventory,id,item){\n            this.$set(this.rightInventories[inventory].items,id,item);\n            let infoitem = item;\n            let width = this.rightInventories[inventory].width;\n            let x = id%width;\n            let y = (id-x)/width;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * width + xFor;\n                        this.rightInventories[inventory].items[index].linkId = id;\n                        this.$set(this.rightInventories[inventory].items,index,this.rightInventories[inventory].items[index]);\n                    }\n                }\n            }\n        },\n        updateItemPlayer(id,item){\n            this.$set(this.playerItems,id,item);\n        },\n        removeRightItem(inventory,id){\n            let inventoryWidth = this.rightInventories[inventory].width;\n            let infoitem = infoItems[this.rightInventories[inventory].items[id].id];\n            let x = id%inventoryWidth;\n            let y = (id-x)/inventoryWidth;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * inventoryWidth + xFor;\n                        delete this.rightInventories[inventory].items[index].linkId\n                    }\n                }\n            }\n            this.$set(this.rightInventories[inventory].items,id,JSON.parse(JSON.stringify(infoItems[0])));\n        },\n        getHandAllSlot(hand){\n            return typeof this.playerItems[hand] == 'object'  && this.playerItems[hand].id != 0 && this.playerItems[hand].allHandSlot;\n        },\n        outClick(){\n            this.offDraggableItem()\n        },\n        offDraggableItem(){\n            $(\".itemdrag\").css(\"background-image\",'none');\n            inventory.dragSLotInfo.inventorydrag = 0;\n            inventory.dragSLotInfo.dragslot = -1;\n            inventory.dragSLotInfo.item = {};\n            inventory.interactive.show = false;\n        }\n    },\n    components:{\n        slotItem,\n        titleInventory,\n        item,\n        itemWeapon,\n        slotPlayer\n    },\n    created(){\n        window.inventory = this;\n        $(document).mousemove(function(e){\n            if(!window.inventory.show)return;\n            $(\".itemdrag\").css({ \"left\": e.pageX - 25, \"top\": e.pageY - 25 });\n        }); \n        $(\"body\").keyup(function(event){\n            if(event.which == 27 && inventory.show){\n                inventory.hide();\n            }\n        })\n    },\n    computed: {\n        nickName(){\n            let names = window.nickName.split(' ')\n            return `${names[0]} ${names[1][0]}.`;\n        }\n    },\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/inventory","sourcesContent":["<template>\n    <div class=\"inventory\" v-if=\"show\">\n        <div class=\"out\" @click=\"outClick\"></div>\n        <div class=\"container\" >\n            <div class=\"out\" @click=\"outClick\"></div>\n            <div class=\"container_top\">\n                <div class=\"container_top__weapon-item\">\n                    <div class=\"container_top__weapon-item-headline\">\n                        <h2>Оружие</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <itemWeapon \n                            v-for=\"(weapon,i) in weaponSlots\"\n                            :key=\"i\"\n                            @mousedown=\"clickItemPlayer(weapon)\" \n                            @mouseupLeft=\"mouseupPlayer(weapon)\"\n                            @clickRightItem=\"clickRightItem($event,weapon)\"\n                            v-bind:item=\"playerItems[weapon]\"\n                            ></itemWeapon>\n                            <tr>\n                                <td colspan=\"1\"></td>\n                                <td colspan=\"1\">\n                                    <!-- <img src=\"img/inventory/icons/items/weapons/Bz-gas-icon.png\" alt=\"\"> -->\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"container_top__my-item\">\n                    <div class=\"container_top__my-item-headline\">\n                        <h2>{{nickName}}</h2>\n                        <ul>\n                            <li>\n                                <i></i>\n                                {{hunger.toFixed()}}%\n                            </li>\n                            <li>\n                                <i></i>\n                                {{water.toFixed()}}%\n                            </li>\n                        </ul>\n                    </div>\n                    <table cellpadding=\"4\" cellspacing=\"0\">\n                        <tbody>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.glasses\" \n                                :icon=\"'020-vision.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('glasses')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('glasses')\"\n                                @clickRightItem=\"clickRightItem($event,'glasses')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.ears\" \n                                :icon=\"'005-earrings.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('ears')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('ears')\"\n                                @clickRightItem=\"clickRightItem($event,'ears')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.hat\" \n                                :icon=\"'001-baseball-cap.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('hat')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('hat')\"\n                                @clickRightItem=\"clickRightItem($event,'hat')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.card\" \n                                :icon=\"'015-credit-card.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('card')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('card')\"\n                                @clickRightItem=\"clickRightItem($event,'card')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :icon=\"'018-purse.svg'\"\n                                :item=\"playerItems.money\" \n                                ></slotPlayer>\n                            </tr>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.license\" \n                                :icon=\"'011-identity-card.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('license')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('license')\"\n                                @clickRightItem=\"clickRightItem($event,'license')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.armor\" \n                                :icon=\"'007-kevlar.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('armor')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('armor')\"\n                                @clickRightItem=\"clickRightItem($event,'armor')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.accessories\" \n                                :icon=\"'008-bracelet.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('accessories')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('accessories')\"\n                                @clickRightItem=\"clickRightItem($event,'accessories')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.bracelets\" \n                                :icon=\"'006-link.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('bracelets')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('bracelets')\"\n                                @clickRightItem=\"clickRightItem($event,'bracelets')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.watches\" \n                                :icon=\"'012-watch-with-blank-face.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('watches')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('watches')\"\n                                @clickRightItem=\"clickRightItem($event,'watches')\"\n                                ></slotPlayer>\n                            </tr>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.gloves\" \n                                :icon=\"'016-glove.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('gloves')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('gloves')\"\n                                @clickRightItem=\"clickRightItem($event,'gloves')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :icon=\"'hockey-mask_1.svg'\"\n                                :item=\"playerItems.masks\" \n                                v-on:mousedown=\"clickItemPlayer('masks')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('masks')\"\n                                @clickRightItem=\"clickRightItem($event,'masks')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.top\" \n                                :icon=\"'002-winter.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('top')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('top')\"\n                                @clickRightItem=\"clickRightItem($event,'top')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.bag\" \n                                :icon=\"'013-portfolio.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('bag')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('bag')\"\n                                @clickRightItem=\"clickRightItem($event,'bag')\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.phone\" \n                                :icon=\"'010-smartphone.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('phone')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('phone')\"\n                                @clickRightItem=\"clickRightItem($event,'phone')\"\n                                ></slotPlayer>\n                            </tr>\n                            <tr class=\"last\">\n                                <slotPlayer \n                                v-show=\"!getHandAllSlot('hand2')\"\n                                :icon=\"'009-palm-of-hand.svg'\"\n                                :item=\"playerItems.hand1\"\n                                v-on:mousedown=\"clickItemPlayer('hand1')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('hand1')\"\n                                @clickRightItem=\"clickRightItem($event,'hand1')\"\n                                :class=\"{'allHand': getHandAllSlot('hand1')}\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                v-show=\"!getHandAllSlot('hand1')\"\n                                :icon=\"'009-palm-of-hand.svg'\"\n                                :item=\"playerItems.hand2\"\n                                v-on:mousedown=\"clickItemPlayer('hand2')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('hand2')\"\n                                @clickRightItem=\"clickRightItem($event,'hand2')\"\n                                :class=\"{'allHand': getHandAllSlot('hand2')}\"\n                                ></slotPlayer>\n                                <slotPlayer \n                                :item=\"playerItems.leg\" \n                                :icon=\"'003-pants.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('leg')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('leg')\"\n                                @clickRightItem=\"clickRightItem($event,'leg')\"\n                                ></slotPlayer>\n                                <td rowspan=\"2\"><img :src=\"`${$root.cdn}img/inventory/icons/017-back.svg`\" style=\"transform:rotate(180deg)\" alt=\"\"></td>\n                                <td rowspan=\"2\"><img :src=\"`${$root.cdn}img/inventory/icons/017-back.svg`\" alt=\"\"></td>\n                            </tr>\n                            <tr>\n                                <slotPlayer \n                                :item=\"playerItems.foot\" \n                                :icon=\"'004-sports-and-competition.svg'\"\n                                v-on:mousedown=\"clickItemPlayer('foot')\" \n                                v-on:mouseupLeft=\"mouseupPlayer('foot')\"\n                                @clickRightItem=\"clickRightItem($event,'foot')\"\n                                ></slotPlayer>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"container_top__backpack-item\">\n                    <div class=\"container_top__backpack-item-headline\">\n                        <h2>Сумка</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr>\n                            <slotItem \n                                v-for=\"(i) in ((rightInventories[2].width)*(rightInventories[2].height))\" :key=\"i\" \n                                :style=\"getCssItemInventory(rightInventories[2].items[i-1],i-1,rightInventories[2])\" class=\"item\"\n                                v-on:mouseover=\"mouseoverRight(rightInventories[2],i-1)\" \n                                v-on:mousedown=\"clickItemRight(rightInventories[2],i-1)\" \n                                v-on:mouseupLeft=\"mouseupRight(rightInventories[2],i-1)\"\n                                :padding=\"hasShowSlot(rightInventories[2].items[i-1],rightInventories[2].nameInventory,i-1) && typeof rightInventories[2].items[i-1] == 'object' && rightInventories[2].items[i-1].id  ? `calc( ${ (100/rightInventories[2].items[i-1].width)*rightInventories[2].items[i-1].height }%  +  ${ rightInventories[2].items[i-1].width > rightInventories[2].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                :item=\"hasShowSlot(rightInventories[2].items[i-1],rightInventories[2].nameInventory,i-1) ? rightInventories[2].items[i-1] : {}\" \n                                @clickRightItem=\"clickRightItem($event,i-1,2)\"\n                                :class=\"{disabled:!rightInventories[2].show}\"\n                                >\n                            </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                \n            </div>\n            <div class=\"container_middle\">\n                <div class=\"container_middle__topclothes-item\">\n                    <div class=\"container_middle__topclothes-item-headline\">\n                        <h2>Верхняя одежда</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <slotItem \n                                v-for=\"(i) in ((rightInventories[0].width)*(rightInventories[0].height))\" :key=\"i\" \n                                :style=\"getCssItemInventory(rightInventories[0].items[i-1],i-1,rightInventories[0])\" class=\"item\"\n                                v-on:mouseover=\"mouseoverRight(rightInventories[0],i-1)\" \n                                v-on:mousedown=\"clickItemRight(rightInventories[0],i-1)\" \n                                v-on:mouseupLeft=\"mouseupRight(rightInventories[0],i-1)\"\n                                :padding=\"hasShowSlot(rightInventories[0].items[i-1],rightInventories[0].nameInventory,i-1) && typeof rightInventories[0].items[i-1] == 'object' && rightInventories[0].items[i-1].id  ? `calc( ${ (100/rightInventories[0].items[i-1].width)*rightInventories[0].items[i-1].height }%  +  ${ rightInventories[0].items[i-1].width > rightInventories[0].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                :item=\"hasShowSlot(rightInventories[0].items[i-1],rightInventories[0].nameInventory,i-1) ? rightInventories[0].items[i-1] : {}\" \n                                @clickRightItem=\"clickRightItem($event,i-1,0)\"\n                                :class=\"{disabled:!rightInventories[0].show}\"\n                                >\n                                </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"container_middle__bottomclothes-item\">\n                    <div class=\"container_middle__bottomclothes-item-headline\">\n                        <h2>Нижняя одежда</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <slotItem \n                                v-for=\"(i) in ((rightInventories[1].width)*(rightInventories[1].height))\" :key=\"i\" \n                                :style=\"getCssItemInventory(rightInventories[1].items[i-1],i-1,rightInventories[1])\" class=\"item\"\n                                v-on:mouseover=\"mouseoverRight(rightInventories[1],i-1)\" \n                                v-on:mousedown=\"clickItemRight(rightInventories[1],i-1)\" \n                                v-on:mouseupLeft=\"mouseupRight(rightInventories[1],i-1)\"\n                                :padding=\"hasShowSlot(rightInventories[1].items[i-1],rightInventories[1].nameInventory,i-1) && typeof rightInventories[1].items[i-1] == 'object' && rightInventories[1].items[i-1].id  ? `calc( ${ (100/rightInventories[1].items[i-1].width)*rightInventories[1].items[i-1].height }%  +  ${ rightInventories[1].items[i-1].width > rightInventories[1].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                :item=\"hasShowSlot(rightInventories[1].items[i-1],rightInventories[1].nameInventory,i-1) ? rightInventories[1].items[i-1] : {}\" \n                                @clickRightItem=\"clickRightItem($event,i-1,1)\"\n                                :class=\"{disabled:!rightInventories[1].show}\"\n                                >\n                                </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div class=\"container_bottom\" v-if=\"interactionsInventory.length\">\n                <div class=\"container_bottom__trunk-item\">\n                    <div class=\"container_bottom__trunk-item-headline\">\n                        <h2>{{interactionsInventory[interactionsInventoryIndex].title}}</h2>\n                    </div>\n                    <table>\n                        <tbody>\n                            <tr >\n                                <slotItem \n                                    v-for=\"(i) in ((interactionsInventory[interactionsInventoryIndex].width)*(interactionsInventory[interactionsInventoryIndex].height))\" :key=\"i\" \n                                    :style=\"getCssItemInventory(interactionsInventory[interactionsInventoryIndex].items[i-1],i-1,interactionsInventory[interactionsInventoryIndex])\" class=\"item\"\n                                    v-on:mouseover=\"mouseoverRight(interactionsInventory[interactionsInventoryIndex],i-1)\" \n                                    v-on:mousedown=\"clickItemRight(interactionsInventory[interactionsInventoryIndex],i-1)\" \n                                    v-on:mouseupLeft=\"mouseupRight(interactionsInventory[interactionsInventoryIndex],i-1)\"\n                                    :padding=\"hasShowSlot(interactionsInventory[interactionsInventoryIndex].items[i-1],interactionsInventory[interactionsInventoryIndex].nameInventory,i-1) && typeof interactionsInventory[interactionsInventoryIndex].items[i-1] == 'object' && interactionsInventory[interactionsInventoryIndex].items[i-1].id  ? `calc( ${ (100/interactionsInventory[interactionsInventoryIndex].items[i-1].width)*interactionsInventory[interactionsInventoryIndex].items[i-1].height }%  +  ${ interactionsInventory[interactionsInventoryIndex].items[i-1].width > interactionsInventory[interactionsInventoryIndex].items[i-1].height ? '1px' : '0px' }) ` : '100%'\"\n                                    :item=\"hasShowSlot(interactionsInventory[interactionsInventoryIndex].items[i-1],interactionsInventory[interactionsInventoryIndex].nameInventory,i-1) ? interactionsInventory[interactionsInventoryIndex].items[i-1] : {}\" \n                                    @clickRightItem=\"clickRightItem($event,i-1,interactionsInventoryIndex)\"\n                                    >\n                                </slotItem>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-item\"\n            v-if=\"interactive.show\"\n            :style=\"{\n                'left': interactive.x+'px',\n                'top': interactive.y+'px',\n            }\"\n        >\n            <h3 class=\"modal-item__headline\">\n                {{interactive.name}}\n            </h3>\n            <ul>\n                <li v-if=\"interactive.use\" @click=\"useInteractive\"><a >Использовать</a></li>\n                <li v-for=\"(weapon,i) in interactive.weaponsAmmo\" :key=\"i\" @click=\"rchargeInteractive(weapon.weaponSlot)\"><a>Зарядить {{weapon.name}}</a></li>\n                <li @click=\"dropInteractive\"><a>Выкинуть</a></li>\n            </ul>\n        </div>\n        <div class=\"itemdrag\"></div>\n    </div>\n</template>\n<style src=\"../../styles/inventory.scss\" lang=\"scss\"></style>\n\n<script>\n\nimport slotItem from './slot.vue';\nimport item from './item.vue';\nimport itemWeapon from './itemWeapon.vue';\nimport titleInventory from './title.vue'\nimport infoItems from '../../../inventory/itemsinfo.js';\nimport slotPlayer from './slotPlayer.vue';\n\nexport default {\n    data() {\n        return {\n            show: false,\n            hunger: 0,\n            water: 0,\n            items: [],\n            dragSLotInfo: {item: {},inventorydrag:\"\",dragslot:-1},\n            infoItems: infoItems,\n            interactionInventory: 0,\n            weaponSlots:[\n                'weapon1',\n                'weapon2',\n                'weapon3',\n                'weapon4',\n            ],\n            interactive: {show:false,slot: 0,inventory: 0,use:false,weaponsAmmo: [],name: ''},\n            playerItems: {\n                // glasses: infoItems[9],\n                // hat: infoItems[8],\n                // top: infoItems[2],\n                // leg: infoItems[3],\n                // foot: infoItems[4],\n                weapon1: infoItems[0],\n                weapon2: infoItems[0],\n                weapon3: infoItems[0],\n                weapon4: infoItems[0],\n                // ammo1: infoItems[21],\n                // ammo2: infoItems[21],\n            },\n            interactionsInventoryIndex: 0,\n            interactionsInventory: [\n                \n            ],\n            rightInventories: [\n                {\n                    show: false,\n                    width: infoItems[2].inventoryWidth,\n                    height: infoItems[2].inventoryHeight,\n                    name: 'Верхняя одежда',\n                    nameInventory: 'top',\n                    items: [\n                        ]\n                },\n                {\n                    show: false,\n                    \"width\": infoItems[3].inventoryWidth,\n                    \"height\": infoItems[3].inventoryHeight,\n                    name: 'Штаны',\n                    nameInventory: 'leg',\n                    items: [\n                        \n                    ]\n                },\n                {\n                    show: false,\n                    width: infoItems[63].inventoryWidth,\n                    nameInventory: 'bag',\n                    height: infoItems[63].inventoryHeight,\n                    name: 'Сумка',\n                    items: [\n                        \n                    ]\n                },\n            ],\n            \n        };\n    },\n    methods: {\n        clickRightItem(event,slot,inventory = \"player\"){\n            let item = inventory == \"player\" ? this.playerItems[slot] : this.rightInventories[inventory].items[slot];\n            if(!item || !item.id) return;\n            this.interactive.show = true;\n            this.interactive.slot = slot;\n            this.interactive.x = event.pageX;\n            this.interactive.y = event.pageY;\n            this.interactive.use = inventory != \"player\" || infoItems[item.id].isUse;\n            // Если предмет патроны\n            if(inventory != \"player\")inventory = this.rightInventories[inventory].nameInventory\n            this.interactive.inventory = inventory;\n            this.interactive.weaponsAmmo = [];\n            this.interactive.name = this.getNameItem(item);\n            if(item.id == 19){\n                let weaponSlots = this.weaponSlots;\n                for (let i = 0; i < weaponSlots.length; i++) {\n                    const weaponSlot = weaponSlots[i];\n                    let itemWeapon = this.playerItems[weaponSlot];\n                    if(itemWeapon && itemWeapon.id){\n                        let itemInfo = infoItems[itemWeapon.id];\n                        if(itemInfo.type == \"weapon\" && itemInfo.id != 7){\n                            this.interactive.weaponsAmmo.push({\n                                name: itemInfo.name,\n                                weaponSlot\n                            })\n                        }\n                    }\n                }\n            }\n        },\n        getNameItem(item){\n            if(item.id == 1)return `${item.name} ${item.name_cart} ${item.surname}`;\n            else return item.name;\n        },\n        hide(){\n            this.show = false;\n            mp.trigger(\"guitoggle\", this.show);\n            this.offDraggableItem();\n        },\n        clickItemRight(inventory,index){\n            let item = inventory.items[index];\n            this.dragSLotInfo.inventorydrag = inventory.nameInventory;\n            this.dragSLotInfo.dragslot = index;\n            this.dragItem(item);\n        },\n        dragItem(item){\n            this.interactive.show = false;  \n            $(\".itemdrag\").css(\"background-image\",`url(${this.$root.cdn}img/items/${item.image})`)\n            this.dragSLotInfo.item = item;\n            inventory.interactive.show = false;\n        },\n        rchargeInteractive(weaponSlot){\n            this.interactive.show = false;\n            mp.trigger('CallRemote',\"INVENTORY::RCHARGE_ITEM\",this.interactive.slot,this.interactive.inventory,weaponSlot);\n        },\n        mouseupRight(inventory,index){\n            if(!this.dragSLotInfo.item.id)return;\n            if(!inventory.show && !inventory.interactive)return;\n            let free = this.isFreeItem(inventory,this.dragSLotInfo.item,index);\n            if(free && this.dragSLotInfo.dragslot !== -1){\n                mp.trigger(\"CallRemote\",\"INVENTORY::DRAG_SLOT\",this.dragSLotInfo.inventorydrag,this.dragSLotInfo.dragslot,inventory.nameInventory,index)\n            }\n            this.offDraggableItem()\n        },\n        mouseoverRight(inventory,index){\n            if(!this.dragSLotInfo.item || !this.dragSLotInfo.item.id)return;\n            let free = this.isFreeItem(inventory,this.dragSLotInfo.item,index);\n            if(free){\n                \n            }\n        },\n        isFreeItem(inventory,item,index){\n            let hasSize = this.isSizeItem(inventory,item,index);\n            if(hasSize){\n                let infoitem = infoItems[item.id]\n                let inventoryWidth = inventory.width\n                let x = index%inventoryWidth;\n                let y = (index-x)/inventoryWidth;\n                for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                    for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                        if(!(x == xFor && y == yFor)){\n                            let index = yFor * inventoryWidth + xFor;\n                            if(inventory.items[index] && inventory.items[index].id  && this.dragSLotInfo.dragslot != index || inventory.items[index] &&  typeof inventory.items[index].linkId != \"undefined\" && inventory.items[index].linkId != this.dragSLotInfo.dragslot)\n                            return false;\n                        }\n                    }\n                }\n            }\n            return hasSize;\n        },\n        mouseupPlayer(index){\n            let free = !this.playerItems[index] ||  !this.playerItems[index].id  ||  this.playerItems[index].id == this.dragSLotInfo.item.id;\n            if(free || index.indexOf('weapon') != -1){\n                mp.trigger(\"CallRemote\",\"INVENTORY::DRAG_SLOT\",this.dragSLotInfo.inventorydrag,this.dragSLotInfo.dragslot,\"player\",index)\n            }\n            this.offDraggableItem();\n        },\n        mouseoverPlayer(index){\n            if(!this.dragSLotInfo || !this.dragSLotInfo.id)return;\n            inventory = this.rightInventories[inventory];\n            let free = this.playerItems;\n            if(free){\n                \n            }\n        },\n        clickItemPlayer(index){\n            let item = this.playerItems[index];\n            if(typeof item != 'object' || !item.id )return;\n            this.dragItem(item);\n            this.dragSLotInfo.item = item;\n            this.dragSLotInfo.inventorydrag = \"player\";\n            this.dragSLotInfo.dragslot = index;\n        },\n        getCoordsIndex(inventory,index){\n            let x = index%inventory.width;\n            let y = (index-x)/inventory.width;\n            return {\n                x,y\n            }\n        },\n        isSizeItem(inventory,item,index){\n            let {x,y} = this.getCoordsIndex(inventory,index);\n            return !(x+item.width > inventory.width || y+item.height > inventory.height)\n        },\n        addInteractionInventory(name,title){\n            this.interactionsInventory.push({\n                nameInventory:name,\n                title:title,\n                items: [],\n                width: 13,\n                height: 2,\n                interactive: true\n            })\n        },\n        removeInteractionInventory(name){\n            for(let i=0;i<this.interactionsInventory.length;i++){\n                if(this.interactionsInventory[i].nameInventory == name)\n                    this.interactionsInventory.splice(i, 1);\n            }\n            if(!this.interactionsInventory.length) this.interactionInventory = 0;\n        },\n        removeInteractionItem(nameInventory,id){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            let inventoryWidth = inventory.width;\n            let infoitem = infoItems[inventory.items[id].id];\n            let x = id%inventoryWidth;\n            let y = (id-x)/inventoryWidth;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * inventoryWidth + xFor;\n                        delete inventory.items[index].linkId\n                    }\n                }\n            }\n            this.$set(inventory.items,id,JSON.parse(JSON.stringify(infoItems[0])));\n        },\n        setInteractionItem(nameInventory,id,item){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            this.$set(inventory.items,id,item);\n            let infoitem = item;\n            let width = inventory.width;\n            let x = id%width;\n            let y = (id-x)/width;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * width + xFor;\n                       inventory.items[index].linkId = id;\n                        this.$set(inventory.items,index,inventory.items[index]);\n                    }\n                }\n            }\n        },\n        setIteractiveItems(nameInventory,items){\n            let inventory = this.interactionsInventory.find((inventory)=>{\n                if(inventory.nameInventory == nameInventory)return true;\n            })\n            items.forEach((item,i)=>{\n                this.$set(inventory.items,i,item);\n            })\n        },\n        dropInteractive(){\n            this.interactive.show = false;\n            mp.trigger('INVENTORY::DROP_ITEM', this.interactive.slot,this.interactive.inventory);\n        },\n        useInteractive(){\n            this.interactive.show = false;\n            mp.trigger('CallRemote','INVENTORY::USE_ITEM', this.interactive.slot,this.interactive.inventory);\n        },\n        setRightItems(id,items){\n            items.forEach((item,i)=>{\n                this.$set(this.rightInventories[id].items,i,item);\n            })\n        },\n        \n        hideRightItems(id){\n            this.rightInventories[id].show = false;\n            for (let i = 0; i < this.rightInventories[id].width*this.rightInventories[id].height; i++) {\n                this.$set(this.rightInventories[id].items,i,JSON.parse(JSON.stringify(infoItems[0])));   \n            }\n        },\n        isDragCurentItem(item,nameInventory,index){\n            let hasItemDrag = (this.dragSLotInfo.inventorydrag != \"player\" && !!this.dragSLotInfo.item.id)\n            return (!!item && hasItemDrag && nameInventory == this.dragSLotInfo.inventorydrag && (this.dragSLotInfo.dragslot == index || item.linkId == this.dragSLotInfo.dragslot));\n        },\n        hasShowSlot(item,nameInventory,index){\n            if(this.isDragCurentItem(item,nameInventory,index)){\n                return false\n            }else{\n                return typeof item != 'object' || item.id  || typeof item.linkId == 'undefined'\n            }\n        },\n        getCssItemInventory(item,index,inventory){\n            let {x,y} = this.getCoordsIndex(inventory,index);\n            let nameInventory = inventory.nameInventory;\n            return `${!this.isDragCurentItem(item,nameInventory,index)   ? `grid-column-end: ${!!item ? item.width : ''} span;  grid-row-end: ${!!item ? item.height : ''} span ;` : ''} \n            ${ this.isDragCurentItem(item,nameInventory,index) || (typeof item != 'object' || item.id  || typeof item.linkId == 'undefined')  ?  'display: flex;' : 'display:none'} ;\n            gridColumnStart: ${x+1};\n            gridRowStart: ${y+1};\n            `\n        },\n        setRightItem(inventory,id,item){\n            this.$set(this.rightInventories[inventory].items,id,item);\n            let infoitem = item;\n            let width = this.rightInventories[inventory].width;\n            let x = id%width;\n            let y = (id-x)/width;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * width + xFor;\n                        this.rightInventories[inventory].items[index].linkId = id;\n                        this.$set(this.rightInventories[inventory].items,index,this.rightInventories[inventory].items[index]);\n                    }\n                }\n            }\n        },\n        updateItemPlayer(id,item){\n            this.$set(this.playerItems,id,item);\n        },\n        removeRightItem(inventory,id){\n            let inventoryWidth = this.rightInventories[inventory].width;\n            let infoitem = infoItems[this.rightInventories[inventory].items[id].id];\n            let x = id%inventoryWidth;\n            let y = (id-x)/inventoryWidth;\n            for(let xFor = x;xFor < infoitem.width+x;xFor++){\n                for(let yFor = y;yFor < infoitem.height+y;yFor++){\n                    if(!(x == xFor && y == yFor)){\n                        let index = yFor * inventoryWidth + xFor;\n                        delete this.rightInventories[inventory].items[index].linkId\n                    }\n                }\n            }\n            this.$set(this.rightInventories[inventory].items,id,JSON.parse(JSON.stringify(infoItems[0])));\n        },\n        getHandAllSlot(hand){\n            return typeof this.playerItems[hand] == 'object'  && this.playerItems[hand].id != 0 && this.playerItems[hand].allHandSlot;\n        },\n        outClick(){\n            this.offDraggableItem()\n        },\n        offDraggableItem(){\n            $(\".itemdrag\").css(\"background-image\",'none');\n            inventory.dragSLotInfo.inventorydrag = 0;\n            inventory.dragSLotInfo.dragslot = -1;\n            inventory.dragSLotInfo.item = {};\n            inventory.interactive.show = false;\n        }\n    },\n    components:{\n        slotItem,\n        titleInventory,\n        item,\n        itemWeapon,\n        slotPlayer\n    },\n    created(){\n        window.inventory = this;\n        $(document).mousemove(function(e){\n            if(!window.inventory.show)return;\n            $(\".itemdrag\").css({ \"left\": e.pageX - 25, \"top\": e.pageY - 25 });\n        }); \n        $(\"body\").keyup(function(event){\n            if(event.which == 27 && inventory.show){\n                inventory.hide();\n            }\n        })\n    },\n    computed: {\n        nickName(){\n            let names = window.nickName.split(' ')\n            return `${names[0]} ${names[1][0]}.`;\n        }\n    },\n}\n</script>"]}]}